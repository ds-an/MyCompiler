Terminals unused in grammar

    NUL
    COMMOPEN
    COMMCLOSE
    STRLEN


State 79 conflicts: 8 shift/reduce
State 80 conflicts: 4 shift/reduce
State 140 conflicts: 4 shift/reduce
State 161 conflicts: 12 shift/reduce
State 162 conflicts: 12 shift/reduce
State 163 conflicts: 12 shift/reduce
State 164 conflicts: 12 shift/reduce
State 182 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_list

    2 declaration: VAR decl_param_list TYPEDEF type
    3            | TYPESTR decl_param_list

    4 decl_param_list: decl_assgn
    5                | decl_param_list ',' decl_assgn

    6 decl_assgn: decl_id ASSGN expression
    7           | decl_id

    8 decl_id: ID
    9        | ID '[' ar_expression ']'
   10        | ID '[' INT ']'
   11        | ID '[' ID ']'

   12 function_list: funcproc
   13              | function_list funcproc

   14 funcproc: function
   15         | procedure
   16         | main_function

   17 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body

   18 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body

   19 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

   20 parameter_list: ARG ids TYPEDEF type
   21               | parameter_list ENDST ARG ids TYPEDEF type
   22               | ε

   23 func_body: '{' function_list ret_statement '}'
   24          | '{' statement_list ret_statement '}'
   25          | '{' function_list statement_list ret_statement '}'
   26          | '{' '}'

   27 proc_body: '{' function_list '}'
   28          | '{' statement_list '}'
   29          | '{' function_list statement_list '}'
   30          | '{' '}'

   31 iter_body: statement
   32          | '{' '}'

   33 statement: iter_statement
   34          | if_statement
   35          | expr_statement
   36          | assgn_statement
   37          | decl_statement
   38          | block_statement

   39 block_statement: '{' statement_list '}'

   40 update: ID ASSGN expression

   41 statement_list: statement
   42               | statement_list statement

   43 decl_statement: declaration ENDST

   44 assgn_statement: ID ASSGN expression ENDST
   45                | MUL pr_expression ASSGN expression ENDST

   46 expr_statement: expression ENDST

   47 if_statement: IF '(' expression ')' iter_body
   48             | IF '(' expression ')' iter_body ELSE iter_body

   49 iter_statement: WHILE '(' expression ')' iter_body
   50               | DO iter_body WHILE '(' expression ')' ENDST
   51               | FOR '(' assgn_statement expression ENDST update ')' iter_body

   52 ret_statement: RETURN expression ENDST

   53 ids: ID
   54    | ids ',' ID

   55 expression: not_expression
   56           | ar_expression
   57           | logic_expression
   58           | pr_expression

   59 not_expression: NOT pr_expression

   60 logic_expression: expression logic expression
   61                 | logic_expression logic expression

   62 ar_expression: expression arithmetic expression
   63              | ar_expression arithmetic expression

   64 pr_expression: '(' expression ')'
   65              | ID
   66              | str_id
   67              | literal
   68              | func_call
   69              | ADDRESS pr_expression
   70              | MUL pr_expression
   71              | '|' ID '|'

   72 func_call: ID '(' arglist ')'
   73          | ID '(' ')'

   74 str_id: ID '[' ar_expression ']'
   75       | ID '[' INT ']'
   76       | ID '[' ID ']'

   77 arglist: expression
   78        | arglist ',' expression

   79 logic: LOGICEQ
   80      | LOGICNOTEQ
   81      | LOGICMORE
   82      | LOGICLESS
   83      | LOGICMOREEQ
   84      | LOGICLESSEQ
   85      | LOGICAND
   86      | LOGICOR

   87 arithmetic: PLUS
   88           | MINUS
   89           | MUL
   90           | DIV

   91 type: TYPEBOOL
   92     | TYPECHAR
   93     | TYPEINT
   94     | TYPEREAL
   95     | TYPECHARPOINTER
   96     | TYPEINTPOINTER
   97     | TYPEREALPOINTER
   98     | TYPESTR

   99 literal: INT
  100        | REAL
  101        | CHAR
  102        | BOOL
  103        | STR


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17 18 19 47 48 49 50 51 64 72 73
    ')' (41) 17 18 19 47 48 49 50 51 64 72 73
    ',' (44) 5 54 78
    '[' (91) 9 10 11 74 75 76
    ']' (93) 9 10 11 74 75 76
    '{' (123) 23 24 25 26 27 28 29 30 32 39
    '|' (124) 71
    '}' (125) 23 24 25 26 27 28 29 30 32 39
    error (256)
    INT <node_info> (258) 10 75 99
    ID <node_info> (259) 8 9 10 11 17 18 40 44 53 54 65 71 72 73 74 75 76
    REAL <node_info> (260) 100
    BOOL <node_info> (261) 102
    STR <node_info> (262) 103
    CHAR <node_info> (263) 101
    IF <node_info> (264) 47 48
    ELSE <node_info> (265) 48
    WHILE <node_info> (266) 49 50
    FOR <node_info> (267) 51
    DO <node_info> (268) 50
    VAR <node_info> (269) 2
    FUNCTION <node_info> (270) 17 18 19
    RETURN <node_info> (271) 52
    NUL <node_info> (272)
    VOID <node_info> (273) 18 19
    TYPEBOOL <node_info> (274) 91
    TYPECHAR <node_info> (275) 92
    TYPEINT <node_info> (276) 93
    TYPEREAL <node_info> (277) 94
    TYPECHARPOINTER <node_info> (278) 95
    TYPEINTPOINTER <node_info> (279) 96
    TYPEREALPOINTER <node_info> (280) 97
    TYPESTR <node_info> (281) 3 98
    LOGICEQ <node_info> (282) 79
    LOGICNOTEQ <node_info> (283) 80
    LOGICMORE <node_info> (284) 81
    LOGICLESS <node_info> (285) 82
    LOGICMOREEQ <node_info> (286) 83
    LOGICLESSEQ <node_info> (287) 84
    LOGICAND <node_info> (288) 85
    LOGICOR <node_info> (289) 86
    PLUS <node_info> (290) 87
    MINUS <node_info> (291) 88
    MUL <node_info> (292) 45 70 89
    DIV <node_info> (293) 90
    ARG <node_info> (294) 20 21
    ASSGN <node_info> (295) 6 40 44 45
    ENDST <node_info> (296) 21 43 44 45 46 50 51 52
    TYPEDEF <node_info> (297) 2 17 18 19 20 21
    NOT <node_info> (298) 59
    ADDRESS <node_info> (299) 69
    COMMOPEN <node_info> (300)
    COMMCLOSE <node_info> (301)
    MAIN <node_info> (302) 19
    STRLEN <node_info> (303)
    "lowest" (304)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program <node_info> (59)
        on left: 1
        on right: 0
    declaration <node_info> (60)
        on left: 2 3
        on right: 43
    decl_param_list <node_info> (61)
        on left: 4 5
        on right: 2 3 5
    decl_assgn <node_info> (62)
        on left: 6 7
        on right: 4 5
    decl_id <node_info> (63)
        on left: 8 9 10 11
        on right: 6 7
    function_list <node_info> (64)
        on left: 12 13
        on right: 1 13 23 25 27 29
    funcproc <node_info> (65)
        on left: 14 15 16
        on right: 12 13
    function <node_info> (66)
        on left: 17
        on right: 14
    procedure <node_info> (67)
        on left: 18
        on right: 15
    main_function <node_info> (68)
        on left: 19
        on right: 16
    parameter_list <node_info> (69)
        on left: 20 21 22
        on right: 17 18 19 21
    func_body <node_info> (70)
        on left: 23 24 25 26
        on right: 17
    proc_body <node_info> (71)
        on left: 27 28 29 30
        on right: 18 19
    iter_body <node_info> (72)
        on left: 31 32
        on right: 47 48 49 50 51
    statement <node_info> (73)
        on left: 33 34 35 36 37 38
        on right: 31 41 42
    block_statement <node_info> (74)
        on left: 39
        on right: 38
    update <node_info> (75)
        on left: 40
        on right: 51
    statement_list <node_info> (76)
        on left: 41 42
        on right: 24 25 28 29 39 42
    decl_statement <node_info> (77)
        on left: 43
        on right: 37
    assgn_statement <node_info> (78)
        on left: 44 45
        on right: 36 51
    expr_statement <node_info> (79)
        on left: 46
        on right: 35
    if_statement <node_info> (80)
        on left: 47 48
        on right: 34
    iter_statement <node_info> (81)
        on left: 49 50 51
        on right: 33
    ret_statement <node_info> (82)
        on left: 52
        on right: 23 24 25
    ids <node_info> (83)
        on left: 53 54
        on right: 20 21 54
    expression <node_info> (84)
        on left: 55 56 57 58
        on right: 6 40 44 45 46 47 48 49 50 51 52 60 61 62 63 64 77 78
    not_expression <node_info> (85)
        on left: 59
        on right: 55
    logic_expression <node_info> (86)
        on left: 60 61
        on right: 57 61
    ar_expression <node_info> (87)
        on left: 62 63
        on right: 9 56 63 74
    pr_expression <node_info> (88)
        on left: 64 65 66 67 68 69 70 71
        on right: 45 58 59 69 70
    func_call <node_info> (89)
        on left: 72 73
        on right: 68
    str_id <node_info> (90)
        on left: 74 75 76
        on right: 66
    arglist <node_info> (91)
        on left: 77 78
        on right: 72 78
    logic <node_info> (92)
        on left: 79 80 81 82 83 84 85 86
        on right: 60 61
    arithmetic <node_info> (93)
        on left: 87 88 89 90
        on right: 62 63
    type <node_info> (94)
        on left: 91 92 93 94 95 96 97 98
        on right: 2 17 20 21
    literal <node_info> (95)
        on left: 99 100 101 102 103
        on right: 67


State 0

    0 $accept: • program $end

    FUNCTION  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    funcproc       go to state 4
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 1

   17 function: FUNCTION • ID '(' parameter_list ')' TYPEDEF type func_body
   18 procedure: FUNCTION • ID '(' parameter_list ')' TYPEDEF VOID proc_body
   19 main_function: FUNCTION • MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 2

    0 $accept: program • $end

    $end  shift, and go to state 10


State 3

    1 program: function_list •
   13 function_list: function_list • funcproc

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    funcproc       go to state 11
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 4

   12 function_list: funcproc •

    $default  reduce using rule 12 (function_list)


State 5

   14 funcproc: function •

    $default  reduce using rule 14 (funcproc)


State 6

   15 funcproc: procedure •

    $default  reduce using rule 15 (funcproc)


State 7

   16 funcproc: main_function •

    $default  reduce using rule 16 (funcproc)


State 8

   17 function: FUNCTION ID • '(' parameter_list ')' TYPEDEF type func_body
   18 procedure: FUNCTION ID • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 12


State 9

   19 main_function: FUNCTION MAIN • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 13


State 10

    0 $accept: program $end •

    $default  accept


State 11

   13 function_list: function_list funcproc •

    $default  reduce using rule 13 (function_list)


State 12

   17 function: FUNCTION ID '(' • parameter_list ')' TYPEDEF type func_body
   18 procedure: FUNCTION ID '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 22 (parameter_list)

    parameter_list  go to state 15


State 13

   19 main_function: FUNCTION MAIN '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 22 (parameter_list)

    parameter_list  go to state 16


State 14

   20 parameter_list: ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 18


State 15

   17 function: FUNCTION ID '(' parameter_list • ')' TYPEDEF type func_body
   18 procedure: FUNCTION ID '(' parameter_list • ')' TYPEDEF VOID proc_body
   21 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 20


State 16

   19 main_function: FUNCTION MAIN '(' parameter_list • ')' TYPEDEF VOID proc_body
   21 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 21


State 17

   53 ids: ID •

    $default  reduce using rule 53 (ids)


State 18

   20 parameter_list: ARG ids • TYPEDEF type
   54 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 22
    ','      shift, and go to state 23


State 19

   21 parameter_list: parameter_list ENDST • ARG ids TYPEDEF type

    ARG  shift, and go to state 24


State 20

   17 function: FUNCTION ID '(' parameter_list ')' • TYPEDEF type func_body
   18 procedure: FUNCTION ID '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 25


State 21

   19 main_function: FUNCTION MAIN '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 26


State 22

   20 parameter_list: ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 35


State 23

   54 ids: ids ',' • ID

    ID  shift, and go to state 36


State 24

   21 parameter_list: parameter_list ENDST ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 37


State 25

   17 function: FUNCTION ID '(' parameter_list ')' TYPEDEF • type func_body
   18 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID             shift, and go to state 38
    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 39


State 26

   19 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID  shift, and go to state 40


State 27

   91 type: TYPEBOOL •

    $default  reduce using rule 91 (type)


State 28

   92 type: TYPECHAR •

    $default  reduce using rule 92 (type)


State 29

   93 type: TYPEINT •

    $default  reduce using rule 93 (type)


State 30

   94 type: TYPEREAL •

    $default  reduce using rule 94 (type)


State 31

   95 type: TYPECHARPOINTER •

    $default  reduce using rule 95 (type)


State 32

   96 type: TYPEINTPOINTER •

    $default  reduce using rule 96 (type)


State 33

   97 type: TYPEREALPOINTER •

    $default  reduce using rule 97 (type)


State 34

   98 type: TYPESTR •

    $default  reduce using rule 98 (type)


State 35

   20 parameter_list: ARG ids TYPEDEF type •

    $default  reduce using rule 20 (parameter_list)


State 36

   54 ids: ids ',' ID •

    $default  reduce using rule 54 (ids)


State 37

   21 parameter_list: parameter_list ENDST ARG ids • TYPEDEF type
   54 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 41
    ','      shift, and go to state 23


State 38

   18 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 43


State 39

   17 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type • func_body

    '{'  shift, and go to state 44

    func_body  go to state 45


State 40

   19 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 46


State 41

   21 parameter_list: parameter_list ENDST ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 47


State 42

   27 proc_body: '{' • function_list '}'
   28          | '{' • statement_list '}'
   29          | '{' • function_list statement_list '}'
   30          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    '('       shift, and go to state 63
    '{'       shift, and go to state 64
    '}'       shift, and go to state 65
    '|'       shift, and go to state 66

    declaration       go to state 67
    function_list     go to state 68
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 71
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 43

   18 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 18 (procedure)


State 44

   23 func_body: '{' • function_list ret_statement '}'
   24          | '{' • statement_list ret_statement '}'
   25          | '{' • function_list statement_list ret_statement '}'
   26          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    '('       shift, and go to state 63
    '{'       shift, and go to state 64
    '}'       shift, and go to state 85
    '|'       shift, and go to state 66

    declaration       go to state 67
    function_list     go to state 86
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 87
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 45

   17 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body •

    $default  reduce using rule 17 (function)


State 46

   19 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 19 (main_function)


State 47

   21 parameter_list: parameter_list ENDST ARG ids TYPEDEF type •

    $default  reduce using rule 21 (parameter_list)


State 48

   99 literal: INT •

    $default  reduce using rule 99 (literal)


State 49

   44 assgn_statement: ID • ASSGN expression ENDST
   65 pr_expression: ID •
   72 func_call: ID • '(' arglist ')'
   73          | ID • '(' ')'
   74 str_id: ID • '[' ar_expression ']'
   75       | ID • '[' INT ']'
   76       | ID • '[' ID ']'

    ASSGN  shift, and go to state 88
    '['    shift, and go to state 89
    '('    shift, and go to state 90

    $default  reduce using rule 65 (pr_expression)


State 50

  100 literal: REAL •

    $default  reduce using rule 100 (literal)


State 51

  102 literal: BOOL •

    $default  reduce using rule 102 (literal)


State 52

  103 literal: STR •

    $default  reduce using rule 103 (literal)


State 53

  101 literal: CHAR •

    $default  reduce using rule 101 (literal)


State 54

   47 if_statement: IF • '(' expression ')' iter_body
   48             | IF • '(' expression ')' iter_body ELSE iter_body

    '('  shift, and go to state 91


State 55

   49 iter_statement: WHILE • '(' expression ')' iter_body

    '('  shift, and go to state 92


State 56

   51 iter_statement: FOR • '(' assgn_statement expression ENDST update ')' iter_body

    '('  shift, and go to state 93


State 57

   50 iter_statement: DO • iter_body WHILE '(' expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 94
    '|'      shift, and go to state 66

    declaration       go to state 67
    iter_body         go to state 95
    statement         go to state 96
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 58

    2 declaration: VAR • decl_param_list TYPEDEF type

    ID  shift, and go to state 97

    decl_param_list  go to state 98
    decl_assgn       go to state 99
    decl_id          go to state 100


State 59

    3 declaration: TYPESTR • decl_param_list

    ID  shift, and go to state 97

    decl_param_list  go to state 101
    decl_assgn       go to state 99
    decl_id          go to state 100


State 60

   45 assgn_statement: MUL • pr_expression ASSGN expression ENDST
   70 pr_expression: MUL • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    pr_expression  go to state 104
    func_call      go to state 82
    str_id         go to state 83
    literal        go to state 84


State 61

   59 not_expression: NOT • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    pr_expression  go to state 105
    func_call      go to state 82
    str_id         go to state 83
    literal        go to state 84


State 62

   69 pr_expression: ADDRESS • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    pr_expression  go to state 106
    func_call      go to state 82
    str_id         go to state 83
    literal        go to state 84


State 63

   64 pr_expression: '(' • expression ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 107
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 64

   39 block_statement: '{' • statement_list '}'

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 108
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 65

   30 proc_body: '{' '}' •

    $default  reduce using rule 30 (proc_body)


State 66

   71 pr_expression: '|' • ID '|'

    ID  shift, and go to state 109


State 67

   43 decl_statement: declaration • ENDST

    ENDST  shift, and go to state 110


State 68

   13 function_list: function_list • funcproc
   27 proc_body: '{' function_list • '}'
   29          | '{' function_list • statement_list '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    '('       shift, and go to state 63
    '{'       shift, and go to state 64
    '}'       shift, and go to state 111
    '|'       shift, and go to state 66

    declaration       go to state 67
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 112
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 69

   41 statement_list: statement •

    $default  reduce using rule 41 (statement_list)


State 70

   38 statement: block_statement •

    $default  reduce using rule 38 (statement)


State 71

   28 proc_body: '{' statement_list • '}'
   42 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '}'      shift, and go to state 113
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 114
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 72

   37 statement: decl_statement •

    $default  reduce using rule 37 (statement)


State 73

   36 statement: assgn_statement •

    $default  reduce using rule 36 (statement)


State 74

   35 statement: expr_statement •

    $default  reduce using rule 35 (statement)


State 75

   34 statement: if_statement •

    $default  reduce using rule 34 (statement)


State 76

   33 statement: iter_statement •

    $default  reduce using rule 33 (statement)


State 77

   46 expr_statement: expression • ENDST
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ENDST        shift, and go to state 127

    logic       go to state 128
    arithmetic  go to state 129


State 78

   55 expression: not_expression •

    $default  reduce using rule 55 (expression)


State 79

   57 expression: logic_expression •
   61 logic_expression: logic_expression • logic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122

    LOGICEQ      [reduce using rule 57 (expression)]
    LOGICNOTEQ   [reduce using rule 57 (expression)]
    LOGICMORE    [reduce using rule 57 (expression)]
    LOGICLESS    [reduce using rule 57 (expression)]
    LOGICMOREEQ  [reduce using rule 57 (expression)]
    LOGICLESSEQ  [reduce using rule 57 (expression)]
    LOGICAND     [reduce using rule 57 (expression)]
    LOGICOR      [reduce using rule 57 (expression)]
    $default     reduce using rule 57 (expression)

    logic  go to state 130


State 80

   56 expression: ar_expression •
   63 ar_expression: ar_expression • arithmetic expression

    PLUS   shift, and go to state 123
    MINUS  shift, and go to state 124
    MUL    shift, and go to state 125
    DIV    shift, and go to state 126

    PLUS      [reduce using rule 56 (expression)]
    MINUS     [reduce using rule 56 (expression)]
    MUL       [reduce using rule 56 (expression)]
    DIV       [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)

    arithmetic  go to state 131


State 81

   58 expression: pr_expression •

    $default  reduce using rule 58 (expression)


State 82

   68 pr_expression: func_call •

    $default  reduce using rule 68 (pr_expression)


State 83

   66 pr_expression: str_id •

    $default  reduce using rule 66 (pr_expression)


State 84

   67 pr_expression: literal •

    $default  reduce using rule 67 (pr_expression)


State 85

   26 func_body: '{' '}' •

    $default  reduce using rule 26 (func_body)


State 86

   13 function_list: function_list • funcproc
   23 func_body: '{' function_list • ret_statement '}'
   25          | '{' function_list • statement_list ret_statement '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    RETURN    shift, and go to state 132
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    '('       shift, and go to state 63
    '{'       shift, and go to state 64
    '|'       shift, and go to state 66

    declaration       go to state 67
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 133
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    ret_statement     go to state 134
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 87

   24 func_body: '{' statement_list • ret_statement '}'
   42 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 132
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 114
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    ret_statement     go to state 135
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 88

   44 assgn_statement: ID ASSGN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 136
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 89

   74 str_id: ID '[' • ar_expression ']'
   75       | ID '[' • INT ']'
   76       | ID '[' • ID ']'

    INT      shift, and go to state 137
    ID       shift, and go to state 138
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 139
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 140
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 90

   72 func_call: ID '(' • arglist ')'
   73          | ID '(' • ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    ')'      shift, and go to state 141
    '|'      shift, and go to state 66

    expression        go to state 142
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    arglist           go to state 143
    literal           go to state 84


State 91

   47 if_statement: IF '(' • expression ')' iter_body
   48             | IF '(' • expression ')' iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 144
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 92

   49 iter_statement: WHILE '(' • expression ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 145
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 93

   51 iter_statement: FOR '(' • assgn_statement expression ENDST update ')' iter_body

    ID   shift, and go to state 146
    MUL  shift, and go to state 147

    assgn_statement  go to state 148


State 94

   32 iter_body: '{' • '}'
   39 block_statement: '{' • statement_list '}'

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '}'      shift, and go to state 149
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 69
    block_statement   go to state 70
    statement_list    go to state 108
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 95

   50 iter_statement: DO iter_body • WHILE '(' expression ')' ENDST

    WHILE  shift, and go to state 150


State 96

   31 iter_body: statement •

    $default  reduce using rule 31 (iter_body)


State 97

    8 decl_id: ID •
    9        | ID • '[' ar_expression ']'
   10        | ID • '[' INT ']'
   11        | ID • '[' ID ']'

    '['  shift, and go to state 151

    $default  reduce using rule 8 (decl_id)


State 98

    2 declaration: VAR decl_param_list • TYPEDEF type
    5 decl_param_list: decl_param_list • ',' decl_assgn

    TYPEDEF  shift, and go to state 152
    ','      shift, and go to state 153


State 99

    4 decl_param_list: decl_assgn •

    $default  reduce using rule 4 (decl_param_list)


State 100

    6 decl_assgn: decl_id • ASSGN expression
    7           | decl_id •

    ASSGN  shift, and go to state 154

    $default  reduce using rule 7 (decl_assgn)


State 101

    3 declaration: TYPESTR decl_param_list •
    5 decl_param_list: decl_param_list • ',' decl_assgn

    ','  shift, and go to state 153

    $default  reduce using rule 3 (declaration)


State 102

   65 pr_expression: ID •
   72 func_call: ID • '(' arglist ')'
   73          | ID • '(' ')'
   74 str_id: ID • '[' ar_expression ']'
   75       | ID • '[' INT ']'
   76       | ID • '[' ID ']'

    '['  shift, and go to state 89
    '('  shift, and go to state 90

    $default  reduce using rule 65 (pr_expression)


State 103

   70 pr_expression: MUL • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    pr_expression  go to state 155
    func_call      go to state 82
    str_id         go to state 83
    literal        go to state 84


State 104

   45 assgn_statement: MUL pr_expression • ASSGN expression ENDST
   70 pr_expression: MUL pr_expression •

    ASSGN  shift, and go to state 156

    $default  reduce using rule 70 (pr_expression)


State 105

   59 not_expression: NOT pr_expression •

    $default  reduce using rule 59 (not_expression)


State 106

   69 pr_expression: ADDRESS pr_expression •

    $default  reduce using rule 69 (pr_expression)


State 107

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression
   64 pr_expression: '(' expression • ')'

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ')'          shift, and go to state 157

    logic       go to state 128
    arithmetic  go to state 129


State 108

   39 block_statement: '{' statement_list • '}'
   42 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '}'      shift, and go to state 158
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 114
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 109

   71 pr_expression: '|' ID • '|'

    '|'  shift, and go to state 159


State 110

   43 decl_statement: declaration ENDST •

    $default  reduce using rule 43 (decl_statement)


State 111

   27 proc_body: '{' function_list '}' •

    $default  reduce using rule 27 (proc_body)


State 112

   29 proc_body: '{' function_list statement_list • '}'
   42 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '}'      shift, and go to state 160
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 114
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 113

   28 proc_body: '{' statement_list '}' •

    $default  reduce using rule 28 (proc_body)


State 114

   42 statement_list: statement_list statement •

    $default  reduce using rule 42 (statement_list)


State 115

   79 logic: LOGICEQ •

    $default  reduce using rule 79 (logic)


State 116

   80 logic: LOGICNOTEQ •

    $default  reduce using rule 80 (logic)


State 117

   81 logic: LOGICMORE •

    $default  reduce using rule 81 (logic)


State 118

   82 logic: LOGICLESS •

    $default  reduce using rule 82 (logic)


State 119

   83 logic: LOGICMOREEQ •

    $default  reduce using rule 83 (logic)


State 120

   84 logic: LOGICLESSEQ •

    $default  reduce using rule 84 (logic)


State 121

   85 logic: LOGICAND •

    $default  reduce using rule 85 (logic)


State 122

   86 logic: LOGICOR •

    $default  reduce using rule 86 (logic)


State 123

   87 arithmetic: PLUS •

    $default  reduce using rule 87 (arithmetic)


State 124

   88 arithmetic: MINUS •

    $default  reduce using rule 88 (arithmetic)


State 125

   89 arithmetic: MUL •

    $default  reduce using rule 89 (arithmetic)


State 126

   90 arithmetic: DIV •

    $default  reduce using rule 90 (arithmetic)


State 127

   46 expr_statement: expression ENDST •

    $default  reduce using rule 46 (expr_statement)


State 128

   60 logic_expression: expression logic • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 161
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 129

   62 ar_expression: expression arithmetic • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 162
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 130

   61 logic_expression: logic_expression logic • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 163
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 131

   63 ar_expression: ar_expression arithmetic • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 164
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 132

   52 ret_statement: RETURN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 165
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 133

   25 func_body: '{' function_list statement_list • ret_statement '}'
   42 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 132
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 64
    '|'      shift, and go to state 66

    declaration       go to state 67
    statement         go to state 114
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    ret_statement     go to state 166
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 134

   23 func_body: '{' function_list ret_statement • '}'

    '}'  shift, and go to state 167


State 135

   24 func_body: '{' statement_list ret_statement • '}'

    '}'  shift, and go to state 168


State 136

   44 assgn_statement: ID ASSGN expression • ENDST
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ENDST        shift, and go to state 169

    logic       go to state 128
    arithmetic  go to state 129


State 137

   75 str_id: ID '[' INT • ']'
   99 literal: INT •

    ']'  shift, and go to state 170

    $default  reduce using rule 99 (literal)


State 138

   65 pr_expression: ID •
   72 func_call: ID • '(' arglist ')'
   73          | ID • '(' ')'
   74 str_id: ID • '[' ar_expression ']'
   75       | ID • '[' INT ']'
   76       | ID • '[' ID ']'
   76       | ID '[' ID • ']'

    '['  shift, and go to state 89
    ']'  shift, and go to state 171
    '('  shift, and go to state 90

    $default  reduce using rule 65 (pr_expression)


State 139

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    logic       go to state 128
    arithmetic  go to state 129


State 140

   56 expression: ar_expression •
   63 ar_expression: ar_expression • arithmetic expression
   74 str_id: ID '[' ar_expression • ']'

    PLUS   shift, and go to state 123
    MINUS  shift, and go to state 124
    MUL    shift, and go to state 125
    DIV    shift, and go to state 126
    ']'    shift, and go to state 172

    PLUS      [reduce using rule 56 (expression)]
    MINUS     [reduce using rule 56 (expression)]
    MUL       [reduce using rule 56 (expression)]
    DIV       [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)

    arithmetic  go to state 131


State 141

   73 func_call: ID '(' ')' •

    $default  reduce using rule 73 (func_call)


State 142

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression
   77 arglist: expression •

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    $default  reduce using rule 77 (arglist)

    logic       go to state 128
    arithmetic  go to state 129


State 143

   72 func_call: ID '(' arglist • ')'
   78 arglist: arglist • ',' expression

    ','  shift, and go to state 173
    ')'  shift, and go to state 174


State 144

   47 if_statement: IF '(' expression • ')' iter_body
   48             | IF '(' expression • ')' iter_body ELSE iter_body
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ')'          shift, and go to state 175

    logic       go to state 128
    arithmetic  go to state 129


State 145

   49 iter_statement: WHILE '(' expression • ')' iter_body
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ')'          shift, and go to state 176

    logic       go to state 128
    arithmetic  go to state 129


State 146

   44 assgn_statement: ID • ASSGN expression ENDST

    ASSGN  shift, and go to state 88


State 147

   45 assgn_statement: MUL • pr_expression ASSGN expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    pr_expression  go to state 177
    func_call      go to state 82
    str_id         go to state 83
    literal        go to state 84


State 148

   51 iter_statement: FOR '(' assgn_statement • expression ENDST update ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 178
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 149

   32 iter_body: '{' '}' •

    $default  reduce using rule 32 (iter_body)


State 150

   50 iter_statement: DO iter_body WHILE • '(' expression ')' ENDST

    '('  shift, and go to state 179


State 151

    9 decl_id: ID '[' • ar_expression ']'
   10        | ID '[' • INT ']'
   11        | ID '[' • ID ']'

    INT      shift, and go to state 180
    ID       shift, and go to state 181
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 139
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 182
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 152

    2 declaration: VAR decl_param_list TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 183


State 153

    5 decl_param_list: decl_param_list ',' • decl_assgn

    ID  shift, and go to state 97

    decl_assgn  go to state 184
    decl_id     go to state 100


State 154

    6 decl_assgn: decl_id ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 185
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 155

   70 pr_expression: MUL pr_expression •

    $default  reduce using rule 70 (pr_expression)


State 156

   45 assgn_statement: MUL pr_expression ASSGN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 186
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 157

   64 pr_expression: '(' expression ')' •

    $default  reduce using rule 64 (pr_expression)


State 158

   39 block_statement: '{' statement_list '}' •

    $default  reduce using rule 39 (block_statement)


State 159

   71 pr_expression: '|' ID '|' •

    $default  reduce using rule 71 (pr_expression)


State 160

   29 proc_body: '{' function_list statement_list '}' •

    $default  reduce using rule 29 (proc_body)


State 161

   60 logic_expression: expression • logic expression
   60                 | expression logic expression •
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    LOGICEQ      [reduce using rule 60 (logic_expression)]
    LOGICNOTEQ   [reduce using rule 60 (logic_expression)]
    LOGICMORE    [reduce using rule 60 (logic_expression)]
    LOGICLESS    [reduce using rule 60 (logic_expression)]
    LOGICMOREEQ  [reduce using rule 60 (logic_expression)]
    LOGICLESSEQ  [reduce using rule 60 (logic_expression)]
    LOGICAND     [reduce using rule 60 (logic_expression)]
    LOGICOR      [reduce using rule 60 (logic_expression)]
    PLUS         [reduce using rule 60 (logic_expression)]
    MINUS        [reduce using rule 60 (logic_expression)]
    MUL          [reduce using rule 60 (logic_expression)]
    DIV          [reduce using rule 60 (logic_expression)]
    $default     reduce using rule 60 (logic_expression)

    logic       go to state 128
    arithmetic  go to state 129


State 162

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression
   62              | expression arithmetic expression •

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    LOGICEQ      [reduce using rule 62 (ar_expression)]
    LOGICNOTEQ   [reduce using rule 62 (ar_expression)]
    LOGICMORE    [reduce using rule 62 (ar_expression)]
    LOGICLESS    [reduce using rule 62 (ar_expression)]
    LOGICMOREEQ  [reduce using rule 62 (ar_expression)]
    LOGICLESSEQ  [reduce using rule 62 (ar_expression)]
    LOGICAND     [reduce using rule 62 (ar_expression)]
    LOGICOR      [reduce using rule 62 (ar_expression)]
    PLUS         [reduce using rule 62 (ar_expression)]
    MINUS        [reduce using rule 62 (ar_expression)]
    MUL          [reduce using rule 62 (ar_expression)]
    DIV          [reduce using rule 62 (ar_expression)]
    $default     reduce using rule 62 (ar_expression)

    logic       go to state 128
    arithmetic  go to state 129


State 163

   60 logic_expression: expression • logic expression
   61                 | logic_expression logic expression •
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    LOGICEQ      [reduce using rule 61 (logic_expression)]
    LOGICNOTEQ   [reduce using rule 61 (logic_expression)]
    LOGICMORE    [reduce using rule 61 (logic_expression)]
    LOGICLESS    [reduce using rule 61 (logic_expression)]
    LOGICMOREEQ  [reduce using rule 61 (logic_expression)]
    LOGICLESSEQ  [reduce using rule 61 (logic_expression)]
    LOGICAND     [reduce using rule 61 (logic_expression)]
    LOGICOR      [reduce using rule 61 (logic_expression)]
    PLUS         [reduce using rule 61 (logic_expression)]
    MINUS        [reduce using rule 61 (logic_expression)]
    MUL          [reduce using rule 61 (logic_expression)]
    DIV          [reduce using rule 61 (logic_expression)]
    $default     reduce using rule 61 (logic_expression)

    logic       go to state 128
    arithmetic  go to state 129


State 164

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression
   63              | ar_expression arithmetic expression •

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    LOGICEQ      [reduce using rule 63 (ar_expression)]
    LOGICNOTEQ   [reduce using rule 63 (ar_expression)]
    LOGICMORE    [reduce using rule 63 (ar_expression)]
    LOGICLESS    [reduce using rule 63 (ar_expression)]
    LOGICMOREEQ  [reduce using rule 63 (ar_expression)]
    LOGICLESSEQ  [reduce using rule 63 (ar_expression)]
    LOGICAND     [reduce using rule 63 (ar_expression)]
    LOGICOR      [reduce using rule 63 (ar_expression)]
    PLUS         [reduce using rule 63 (ar_expression)]
    MINUS        [reduce using rule 63 (ar_expression)]
    MUL          [reduce using rule 63 (ar_expression)]
    DIV          [reduce using rule 63 (ar_expression)]
    $default     reduce using rule 63 (ar_expression)

    logic       go to state 128
    arithmetic  go to state 129


State 165

   52 ret_statement: RETURN expression • ENDST
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ENDST        shift, and go to state 187

    logic       go to state 128
    arithmetic  go to state 129


State 166

   25 func_body: '{' function_list statement_list ret_statement • '}'

    '}'  shift, and go to state 188


State 167

   23 func_body: '{' function_list ret_statement '}' •

    $default  reduce using rule 23 (func_body)


State 168

   24 func_body: '{' statement_list ret_statement '}' •

    $default  reduce using rule 24 (func_body)


State 169

   44 assgn_statement: ID ASSGN expression ENDST •

    $default  reduce using rule 44 (assgn_statement)


State 170

   75 str_id: ID '[' INT ']' •

    $default  reduce using rule 75 (str_id)


State 171

   76 str_id: ID '[' ID ']' •

    $default  reduce using rule 76 (str_id)


State 172

   74 str_id: ID '[' ar_expression ']' •

    $default  reduce using rule 74 (str_id)


State 173

   78 arglist: arglist ',' • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 189
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 174

   72 func_call: ID '(' arglist ')' •

    $default  reduce using rule 72 (func_call)


State 175

   47 if_statement: IF '(' expression ')' • iter_body
   48             | IF '(' expression ')' • iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 94
    '|'      shift, and go to state 66

    declaration       go to state 67
    iter_body         go to state 190
    statement         go to state 96
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 176

   49 iter_statement: WHILE '(' expression ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 94
    '|'      shift, and go to state 66

    declaration       go to state 67
    iter_body         go to state 191
    statement         go to state 96
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 177

   45 assgn_statement: MUL pr_expression • ASSGN expression ENDST

    ASSGN  shift, and go to state 156


State 178

   51 iter_statement: FOR '(' assgn_statement expression • ENDST update ')' iter_body
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ENDST        shift, and go to state 192

    logic       go to state 128
    arithmetic  go to state 129


State 179

   50 iter_statement: DO iter_body WHILE '(' • expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 193
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 180

   10 decl_id: ID '[' INT • ']'
   99 literal: INT •

    ']'  shift, and go to state 194

    $default  reduce using rule 99 (literal)


State 181

   11 decl_id: ID '[' ID • ']'
   65 pr_expression: ID •
   72 func_call: ID • '(' arglist ')'
   73          | ID • '(' ')'
   74 str_id: ID • '[' ar_expression ']'
   75       | ID • '[' INT ']'
   76       | ID • '[' ID ']'

    '['  shift, and go to state 89
    ']'  shift, and go to state 195
    '('  shift, and go to state 90

    $default  reduce using rule 65 (pr_expression)


State 182

    9 decl_id: ID '[' ar_expression • ']'
   56 expression: ar_expression •
   63 ar_expression: ar_expression • arithmetic expression

    PLUS   shift, and go to state 123
    MINUS  shift, and go to state 124
    MUL    shift, and go to state 125
    DIV    shift, and go to state 126
    ']'    shift, and go to state 196

    PLUS      [reduce using rule 56 (expression)]
    MINUS     [reduce using rule 56 (expression)]
    MUL       [reduce using rule 56 (expression)]
    DIV       [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)

    arithmetic  go to state 131


State 183

    2 declaration: VAR decl_param_list TYPEDEF type •

    $default  reduce using rule 2 (declaration)


State 184

    5 decl_param_list: decl_param_list ',' decl_assgn •

    $default  reduce using rule 5 (decl_param_list)


State 185

    6 decl_assgn: decl_id ASSGN expression •
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    $default  reduce using rule 6 (decl_assgn)

    logic       go to state 128
    arithmetic  go to state 129


State 186

   45 assgn_statement: MUL pr_expression ASSGN expression • ENDST
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ENDST        shift, and go to state 197

    logic       go to state 128
    arithmetic  go to state 129


State 187

   52 ret_statement: RETURN expression ENDST •

    $default  reduce using rule 52 (ret_statement)


State 188

   25 func_body: '{' function_list statement_list ret_statement '}' •

    $default  reduce using rule 25 (func_body)


State 189

   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression
   78 arglist: arglist ',' expression •

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    $default  reduce using rule 78 (arglist)

    logic       go to state 128
    arithmetic  go to state 129


State 190

   47 if_statement: IF '(' expression ')' iter_body •
   48             | IF '(' expression ')' iter_body • ELSE iter_body

    ELSE  shift, and go to state 198

    $default  reduce using rule 47 (if_statement)


State 191

   49 iter_statement: WHILE '(' expression ')' iter_body •

    $default  reduce using rule 49 (iter_statement)


State 192

   51 iter_statement: FOR '(' assgn_statement expression ENDST • update ')' iter_body

    ID  shift, and go to state 199

    update  go to state 200


State 193

   50 iter_statement: DO iter_body WHILE '(' expression • ')' ENDST
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126
    ')'          shift, and go to state 201

    logic       go to state 128
    arithmetic  go to state 129


State 194

   10 decl_id: ID '[' INT ']' •

    $default  reduce using rule 10 (decl_id)


State 195

   11 decl_id: ID '[' ID ']' •

    $default  reduce using rule 11 (decl_id)


State 196

    9 decl_id: ID '[' ar_expression ']' •

    $default  reduce using rule 9 (decl_id)


State 197

   45 assgn_statement: MUL pr_expression ASSGN expression ENDST •

    $default  reduce using rule 45 (assgn_statement)


State 198

   48 if_statement: IF '(' expression ')' iter_body ELSE • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 94
    '|'      shift, and go to state 66

    declaration       go to state 67
    iter_body         go to state 202
    statement         go to state 96
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 199

   40 update: ID • ASSGN expression

    ASSGN  shift, and go to state 203


State 200

   51 iter_statement: FOR '(' assgn_statement expression ENDST update • ')' iter_body

    ')'  shift, and go to state 204


State 201

   50 iter_statement: DO iter_body WHILE '(' expression ')' • ENDST

    ENDST  shift, and go to state 205


State 202

   48 if_statement: IF '(' expression ')' iter_body ELSE iter_body •

    $default  reduce using rule 48 (if_statement)


State 203

   40 update: ID ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 102
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 103
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '|'      shift, and go to state 66

    expression        go to state 206
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 204

   51 iter_statement: FOR '(' assgn_statement expression ENDST update ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    '('      shift, and go to state 63
    '{'      shift, and go to state 94
    '|'      shift, and go to state 66

    declaration       go to state 67
    iter_body         go to state 207
    statement         go to state 96
    block_statement   go to state 70
    decl_statement    go to state 72
    assgn_statement   go to state 73
    expr_statement    go to state 74
    if_statement      go to state 75
    iter_statement    go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    str_id            go to state 83
    literal           go to state 84


State 205

   50 iter_statement: DO iter_body WHILE '(' expression ')' ENDST •

    $default  reduce using rule 50 (iter_statement)


State 206

   40 update: ID ASSGN expression •
   60 logic_expression: expression • logic expression
   62 ar_expression: expression • arithmetic expression

    LOGICEQ      shift, and go to state 115
    LOGICNOTEQ   shift, and go to state 116
    LOGICMORE    shift, and go to state 117
    LOGICLESS    shift, and go to state 118
    LOGICMOREEQ  shift, and go to state 119
    LOGICLESSEQ  shift, and go to state 120
    LOGICAND     shift, and go to state 121
    LOGICOR      shift, and go to state 122
    PLUS         shift, and go to state 123
    MINUS        shift, and go to state 124
    MUL          shift, and go to state 125
    DIV          shift, and go to state 126

    $default  reduce using rule 40 (update)

    logic       go to state 128
    arithmetic  go to state 129


State 207

   51 iter_statement: FOR '(' assgn_statement expression ENDST update ')' iter_body •

    $default  reduce using rule 51 (iter_statement)

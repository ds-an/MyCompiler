Terminals unused in grammar

    NUL
    COMMOPEN
    COMMCLOSE


Grammar

    0 $accept: program $end

    1 program: function_list

    2 declaration: VAR decl_param_list TYPEDEF type
    3            | TYPESTR decl_param_list

    4 decl_param_list: decl_assgn
    5                | decl_param_list ',' decl_assgn

    6 decl_assgn: decl_id ASSGN expression
    7           | decl_id

    8 decl_id: ID
    9        | ID '[' ar_expression ']'
   10        | ID '[' INT ']'

   11 function_list: funcproc
   12              | function_list funcproc

   13 funcproc: function
   14         | procedure
   15         | main_function

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

   19 parameter_list: ARG ids TYPEDEF type
   20               | parameter_list ENDST ARG ids TYPEDEF type
   21               | ε

   22 func_body: '{' function_list ret_statement '}'
   23          | '{' statement_list ret_statement '}'
   24          | '{' function_list statement_list ret_statement '}'
   25          | '{' '}'

   26 proc_body: '{' function_list '}'
   27          | '{' statement_list '}'
   28          | '{' function_list statement_list '}'
   29          | '{' '}'

   30 iter_body: '{' statement_list '}'
   31          | '{' '}'
   32          | statement

   33 statement: iter_statement
   34          | if_statement
   35          | expr_statement
   36          | assgn_statement
   37          | decl_statement

   38 update: ID ASSGN expression

   39 statement_list: statement
   40               | statement_list statement

   41 decl_statement: declaration ENDST

   42 assgn_statement: ids ASSGN expression ENDST

   43 expr_statement: expression ENDST

   44 if_statement: IF '(' expression ')' iter_body
   45             | IF '(' expression ')' iter_body ELSE iter_body

   46 iter_statement: WHILE '(' expression ')' iter_body
   47               | DO iter_body WHILE '(' expression ')' ENDST
   48               | FOR '(' assgn_statement expression ENDST update ')' iter_body

   49 ret_statement: RETURN expression ENDST

   50 ids: ID
   51    | ids ',' ID

   52 expression: not_expression
   53           | ar_expression
   54           | logic_expression
   55           | pr_expression

   56 not_expression: NOT pr_expression

   57 logic_expression: pr_expression logic pr_expression
   58                 | logic_expression logic pr_expression

   59 ar_expression: pr_expression arithmetic pr_expression
   60              | ar_expression arithmetic pr_expression

   61 pr_expression: '(' expression ')'
   62              | ID
   63              | literal
   64              | func_call
   65              | ADDRESS pr_expression
   66              | MUL pr_expression
   67              | STRLEN

   68 func_call: ID '(' arglist ')'
   69          | ID '(' ')'

   70 arglist: expression
   71        | arglist ',' expression

   72 logic: LOGICEQ
   73      | LOGICNOTEQ
   74      | LOGICMORE
   75      | LOGICLESS
   76      | LOGICMOREEQ
   77      | LOGICLESSEQ
   78      | LOGICAND
   79      | LOGICOR

   80 arithmetic: PLUS
   81           | MINUS
   82           | MUL
   83           | DIV

   84 type: TYPEBOOL
   85     | TYPECHAR
   86     | TYPEINT
   87     | TYPEREAL
   88     | TYPECHARPOINTER
   89     | TYPEINTPOINTER
   90     | TYPEREALPOINTER
   91     | TYPESTR

   92 literal: INT
   93        | REAL
   94        | CHAR
   95        | BOOL
   96        | STR


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 17 18 44 45 46 47 48 61 68 69
    ')' (41) 16 17 18 44 45 46 47 48 61 68 69
    ',' (44) 5 51 71
    '[' (91) 9 10
    ']' (93) 9 10
    '{' (123) 22 23 24 25 26 27 28 29 30 31
    '}' (125) 22 23 24 25 26 27 28 29 30 31
    error (256)
    INT <node_info> (258) 10 92
    ID <node_info> (259) 8 9 10 16 17 38 50 51 62 68 69
    REAL <node_info> (260) 93
    BOOL <node_info> (261) 95
    STR <node_info> (262) 96
    CHAR <node_info> (263) 94
    IF <node_info> (264) 44 45
    ELSE <node_info> (265) 45
    WHILE <node_info> (266) 46 47
    FOR <node_info> (267) 48
    DO <node_info> (268) 47
    VAR <node_info> (269) 2
    FUNCTION <node_info> (270) 16 17 18
    RETURN <node_info> (271) 49
    NUL <node_info> (272)
    VOID <node_info> (273) 17 18
    TYPEBOOL <node_info> (274) 84
    TYPECHAR <node_info> (275) 85
    TYPEINT <node_info> (276) 86
    TYPEREAL <node_info> (277) 87
    TYPECHARPOINTER <node_info> (278) 88
    TYPEINTPOINTER <node_info> (279) 89
    TYPEREALPOINTER <node_info> (280) 90
    TYPESTR <node_info> (281) 3 91
    LOGICEQ <node_info> (282) 72
    LOGICNOTEQ <node_info> (283) 73
    LOGICMORE <node_info> (284) 74
    LOGICLESS <node_info> (285) 75
    LOGICMOREEQ <node_info> (286) 76
    LOGICLESSEQ <node_info> (287) 77
    LOGICAND <node_info> (288) 78
    LOGICOR <node_info> (289) 79
    PLUS <node_info> (290) 80
    MINUS <node_info> (291) 81
    MUL <node_info> (292) 66 82
    DIV <node_info> (293) 83
    ARG <node_info> (294) 19 20
    ASSGN <node_info> (295) 6 38 42
    ENDST <node_info> (296) 20 41 42 43 47 48 49
    TYPEDEF <node_info> (297) 2 16 17 18 19 20
    NOT <node_info> (298) 56
    ADDRESS <node_info> (299) 65
    COMMOPEN <node_info> (300)
    COMMCLOSE <node_info> (301)
    MAIN <node_info> (302) 18
    STRLEN <node_info> (303) 67
    "lowest" (304)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program <node_info> (58)
        on left: 1
        on right: 0
    declaration <node_info> (59)
        on left: 2 3
        on right: 41
    decl_param_list <node_info> (60)
        on left: 4 5
        on right: 2 3 5
    decl_assgn <node_info> (61)
        on left: 6 7
        on right: 4 5
    decl_id <node_info> (62)
        on left: 8 9 10
        on right: 6 7
    function_list <node_info> (63)
        on left: 11 12
        on right: 1 12 22 24 26 28
    funcproc <node_info> (64)
        on left: 13 14 15
        on right: 11 12
    function <node_info> (65)
        on left: 16
        on right: 13
    procedure <node_info> (66)
        on left: 17
        on right: 14
    main_function <node_info> (67)
        on left: 18
        on right: 15
    parameter_list <node_info> (68)
        on left: 19 20 21
        on right: 16 17 18 20
    func_body <node_info> (69)
        on left: 22 23 24 25
        on right: 16
    proc_body <node_info> (70)
        on left: 26 27 28 29
        on right: 17 18
    iter_body <node_info> (71)
        on left: 30 31 32
        on right: 44 45 46 47 48
    statement <node_info> (72)
        on left: 33 34 35 36 37
        on right: 32 39 40
    update <node_info> (73)
        on left: 38
        on right: 48
    statement_list <node_info> (74)
        on left: 39 40
        on right: 23 24 27 28 30 40
    decl_statement <node_info> (75)
        on left: 41
        on right: 37
    assgn_statement <node_info> (76)
        on left: 42
        on right: 36 48
    expr_statement <node_info> (77)
        on left: 43
        on right: 35
    if_statement <node_info> (78)
        on left: 44 45
        on right: 34
    iter_statement <node_info> (79)
        on left: 46 47 48
        on right: 33
    ret_statement <node_info> (80)
        on left: 49
        on right: 22 23 24
    ids <node_info> (81)
        on left: 50 51
        on right: 19 20 42 51
    expression <node_info> (82)
        on left: 52 53 54 55
        on right: 6 38 42 43 44 45 46 47 48 49 61 70 71
    not_expression <node_info> (83)
        on left: 56
        on right: 52
    logic_expression <node_info> (84)
        on left: 57 58
        on right: 54 58
    ar_expression <node_info> (85)
        on left: 59 60
        on right: 9 53 60
    pr_expression <node_info> (86)
        on left: 61 62 63 64 65 66 67
        on right: 55 56 57 58 59 60 65 66
    func_call <node_info> (87)
        on left: 68 69
        on right: 64
    arglist <node_info> (88)
        on left: 70 71
        on right: 68 71
    logic <node_info> (89)
        on left: 72 73 74 75 76 77 78 79
        on right: 57 58
    arithmetic <node_info> (90)
        on left: 80 81 82 83
        on right: 59 60
    type <node_info> (91)
        on left: 84 85 86 87 88 89 90 91
        on right: 2 16 19 20
    literal <node_info> (92)
        on left: 92 93 94 95 96
        on right: 63


State 0

    0 $accept: • program $end

    FUNCTION  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    funcproc       go to state 4
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 1

   16 function: FUNCTION • ID '(' parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION • ID '(' parameter_list ')' TYPEDEF VOID proc_body
   18 main_function: FUNCTION • MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 2

    0 $accept: program • $end

    $end  shift, and go to state 10


State 3

    1 program: function_list •
   12 function_list: function_list • funcproc

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    funcproc       go to state 11
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 4

   11 function_list: funcproc •

    $default  reduce using rule 11 (function_list)


State 5

   13 funcproc: function •

    $default  reduce using rule 13 (funcproc)


State 6

   14 funcproc: procedure •

    $default  reduce using rule 14 (funcproc)


State 7

   15 funcproc: main_function •

    $default  reduce using rule 15 (funcproc)


State 8

   16 function: FUNCTION ID • '(' parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 12


State 9

   18 main_function: FUNCTION MAIN • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 13


State 10

    0 $accept: program $end •

    $default  accept


State 11

   12 function_list: function_list funcproc •

    $default  reduce using rule 12 (function_list)


State 12

   16 function: FUNCTION ID '(' • parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 21 (parameter_list)

    parameter_list  go to state 15


State 13

   18 main_function: FUNCTION MAIN '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 21 (parameter_list)

    parameter_list  go to state 16


State 14

   19 parameter_list: ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 18


State 15

   16 function: FUNCTION ID '(' parameter_list • ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' parameter_list • ')' TYPEDEF VOID proc_body
   20 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 20


State 16

   18 main_function: FUNCTION MAIN '(' parameter_list • ')' TYPEDEF VOID proc_body
   20 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 21


State 17

   50 ids: ID •

    $default  reduce using rule 50 (ids)


State 18

   19 parameter_list: ARG ids • TYPEDEF type
   51 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 22
    ','      shift, and go to state 23


State 19

   20 parameter_list: parameter_list ENDST • ARG ids TYPEDEF type

    ARG  shift, and go to state 24


State 20

   16 function: FUNCTION ID '(' parameter_list ')' • TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 25


State 21

   18 main_function: FUNCTION MAIN '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 26


State 22

   19 parameter_list: ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 35


State 23

   51 ids: ids ',' • ID

    ID  shift, and go to state 36


State 24

   20 parameter_list: parameter_list ENDST ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 37


State 25

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF • type func_body
   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID             shift, and go to state 38
    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 39


State 26

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID  shift, and go to state 40


State 27

   84 type: TYPEBOOL •

    $default  reduce using rule 84 (type)


State 28

   85 type: TYPECHAR •

    $default  reduce using rule 85 (type)


State 29

   86 type: TYPEINT •

    $default  reduce using rule 86 (type)


State 30

   87 type: TYPEREAL •

    $default  reduce using rule 87 (type)


State 31

   88 type: TYPECHARPOINTER •

    $default  reduce using rule 88 (type)


State 32

   89 type: TYPEINTPOINTER •

    $default  reduce using rule 89 (type)


State 33

   90 type: TYPEREALPOINTER •

    $default  reduce using rule 90 (type)


State 34

   91 type: TYPESTR •

    $default  reduce using rule 91 (type)


State 35

   19 parameter_list: ARG ids TYPEDEF type •

    $default  reduce using rule 19 (parameter_list)


State 36

   51 ids: ids ',' ID •

    $default  reduce using rule 51 (ids)


State 37

   20 parameter_list: parameter_list ENDST ARG ids • TYPEDEF type
   51 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 41
    ','      shift, and go to state 23


State 38

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 43


State 39

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type • func_body

    '{'  shift, and go to state 44

    func_body  go to state 45


State 40

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 46


State 41

   20 parameter_list: parameter_list ENDST ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 47


State 42

   26 proc_body: '{' • function_list '}'
   27          | '{' • statement_list '}'
   28          | '{' • function_list statement_list '}'
   29          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '}'       shift, and go to state 65

    declaration       go to state 66
    function_list     go to state 67
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 68
    statement_list    go to state 69
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 43

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 17 (procedure)


State 44

   22 func_body: '{' • function_list ret_statement '}'
   23          | '{' • statement_list ret_statement '}'
   24          | '{' • function_list statement_list ret_statement '}'
   25          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '}'       shift, and go to state 83

    declaration       go to state 66
    function_list     go to state 84
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 68
    statement_list    go to state 85
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 45

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body •

    $default  reduce using rule 16 (function)


State 46

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 18 (main_function)


State 47

   20 parameter_list: parameter_list ENDST ARG ids TYPEDEF type •

    $default  reduce using rule 20 (parameter_list)


State 48

   92 literal: INT •

    $default  reduce using rule 92 (literal)


State 49

   50 ids: ID •
   62 pr_expression: ID •
   68 func_call: ID • '(' arglist ')'
   69          | ID • '(' ')'

    '('  shift, and go to state 86

    ASSGN     reduce using rule 50 (ids)
    ','       reduce using rule 50 (ids)
    $default  reduce using rule 62 (pr_expression)


State 50

   93 literal: REAL •

    $default  reduce using rule 93 (literal)


State 51

   95 literal: BOOL •

    $default  reduce using rule 95 (literal)


State 52

   96 literal: STR •

    $default  reduce using rule 96 (literal)


State 53

   94 literal: CHAR •

    $default  reduce using rule 94 (literal)


State 54

   44 if_statement: IF • '(' expression ')' iter_body
   45             | IF • '(' expression ')' iter_body ELSE iter_body

    '('  shift, and go to state 87


State 55

   46 iter_statement: WHILE • '(' expression ')' iter_body

    '('  shift, and go to state 88


State 56

   48 iter_statement: FOR • '(' assgn_statement expression ENDST update ')' iter_body

    '('  shift, and go to state 89


State 57

   47 iter_statement: DO • iter_body WHILE '(' expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 90

    declaration       go to state 66
    iter_body         go to state 91
    statement         go to state 92
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 58

    2 declaration: VAR • decl_param_list TYPEDEF type

    ID  shift, and go to state 93

    decl_param_list  go to state 94
    decl_assgn       go to state 95
    decl_id          go to state 96


State 59

    3 declaration: TYPESTR • decl_param_list

    ID  shift, and go to state 93

    decl_param_list  go to state 97
    decl_assgn       go to state 95
    decl_id          go to state 96


State 60

   66 pr_expression: MUL • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 99
    func_call      go to state 81
    literal        go to state 82


State 61

   56 not_expression: NOT • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 100
    func_call      go to state 81
    literal        go to state 82


State 62

   65 pr_expression: ADDRESS • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 101
    func_call      go to state 81
    literal        go to state 82


State 63

   67 pr_expression: STRLEN •

    $default  reduce using rule 67 (pr_expression)


State 64

   61 pr_expression: '(' • expression ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 102
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 65

   29 proc_body: '{' '}' •

    $default  reduce using rule 29 (proc_body)


State 66

   41 decl_statement: declaration • ENDST

    ENDST  shift, and go to state 103


State 67

   12 function_list: function_list • funcproc
   26 proc_body: '{' function_list • '}'
   28          | '{' function_list • statement_list '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '}'       shift, and go to state 104

    declaration       go to state 66
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 68
    statement_list    go to state 105
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 68

   39 statement_list: statement •

    $default  reduce using rule 39 (statement_list)


State 69

   27 proc_body: '{' statement_list • '}'
   40 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '}'      shift, and go to state 106

    declaration       go to state 66
    statement         go to state 107
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 70

   37 statement: decl_statement •

    $default  reduce using rule 37 (statement)


State 71

   36 statement: assgn_statement •

    $default  reduce using rule 36 (statement)


State 72

   35 statement: expr_statement •

    $default  reduce using rule 35 (statement)


State 73

   34 statement: if_statement •

    $default  reduce using rule 34 (statement)


State 74

   33 statement: iter_statement •

    $default  reduce using rule 33 (statement)


State 75

   42 assgn_statement: ids • ASSGN expression ENDST
   51 ids: ids • ',' ID

    ASSGN  shift, and go to state 108
    ','    shift, and go to state 23


State 76

   43 expr_statement: expression • ENDST

    ENDST  shift, and go to state 109


State 77

   52 expression: not_expression •

    $default  reduce using rule 52 (expression)


State 78

   54 expression: logic_expression •
   58 logic_expression: logic_expression • logic pr_expression

    LOGICEQ      shift, and go to state 110
    LOGICNOTEQ   shift, and go to state 111
    LOGICMORE    shift, and go to state 112
    LOGICLESS    shift, and go to state 113
    LOGICMOREEQ  shift, and go to state 114
    LOGICLESSEQ  shift, and go to state 115
    LOGICAND     shift, and go to state 116
    LOGICOR      shift, and go to state 117

    $default  reduce using rule 54 (expression)

    logic  go to state 118


State 79

   53 expression: ar_expression •
   60 ar_expression: ar_expression • arithmetic pr_expression

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122

    $default  reduce using rule 53 (expression)

    arithmetic  go to state 123


State 80

   55 expression: pr_expression •
   57 logic_expression: pr_expression • logic pr_expression
   59 ar_expression: pr_expression • arithmetic pr_expression

    LOGICEQ      shift, and go to state 110
    LOGICNOTEQ   shift, and go to state 111
    LOGICMORE    shift, and go to state 112
    LOGICLESS    shift, and go to state 113
    LOGICMOREEQ  shift, and go to state 114
    LOGICLESSEQ  shift, and go to state 115
    LOGICAND     shift, and go to state 116
    LOGICOR      shift, and go to state 117
    PLUS         shift, and go to state 119
    MINUS        shift, and go to state 120
    MUL          shift, and go to state 121
    DIV          shift, and go to state 122

    $default  reduce using rule 55 (expression)

    logic       go to state 124
    arithmetic  go to state 125


State 81

   64 pr_expression: func_call •

    $default  reduce using rule 64 (pr_expression)


State 82

   63 pr_expression: literal •

    $default  reduce using rule 63 (pr_expression)


State 83

   25 func_body: '{' '}' •

    $default  reduce using rule 25 (func_body)


State 84

   12 function_list: function_list • funcproc
   22 func_body: '{' function_list • ret_statement '}'
   24          | '{' function_list • statement_list ret_statement '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    RETURN    shift, and go to state 126
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64

    declaration       go to state 66
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 68
    statement_list    go to state 127
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ret_statement     go to state 128
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 85

   23 func_body: '{' statement_list • ret_statement '}'
   40 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 126
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    declaration       go to state 66
    statement         go to state 107
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ret_statement     go to state 129
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 86

   68 func_call: ID '(' • arglist ')'
   69          | ID '(' • ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    ')'      shift, and go to state 130

    expression        go to state 131
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    arglist           go to state 132
    literal           go to state 82


State 87

   44 if_statement: IF '(' • expression ')' iter_body
   45             | IF '(' • expression ')' iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 133
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 88

   46 iter_statement: WHILE '(' • expression ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 134
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 89

   48 iter_statement: FOR '(' • assgn_statement expression ENDST update ')' iter_body

    ID  shift, and go to state 17

    assgn_statement  go to state 135
    ids              go to state 75


State 90

   30 iter_body: '{' • statement_list '}'
   31          | '{' • '}'

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '}'      shift, and go to state 136

    declaration       go to state 66
    statement         go to state 68
    statement_list    go to state 137
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 91

   47 iter_statement: DO iter_body • WHILE '(' expression ')' ENDST

    WHILE  shift, and go to state 138


State 92

   32 iter_body: statement •

    $default  reduce using rule 32 (iter_body)


State 93

    8 decl_id: ID •
    9        | ID • '[' ar_expression ']'
   10        | ID • '[' INT ']'

    '['  shift, and go to state 139

    $default  reduce using rule 8 (decl_id)


State 94

    2 declaration: VAR decl_param_list • TYPEDEF type
    5 decl_param_list: decl_param_list • ',' decl_assgn

    TYPEDEF  shift, and go to state 140
    ','      shift, and go to state 141


State 95

    4 decl_param_list: decl_assgn •

    $default  reduce using rule 4 (decl_param_list)


State 96

    6 decl_assgn: decl_id • ASSGN expression
    7           | decl_id •

    ASSGN  shift, and go to state 142

    $default  reduce using rule 7 (decl_assgn)


State 97

    3 declaration: TYPESTR decl_param_list •
    5 decl_param_list: decl_param_list • ',' decl_assgn

    ','  shift, and go to state 141

    $default  reduce using rule 3 (declaration)


State 98

   62 pr_expression: ID •
   68 func_call: ID • '(' arglist ')'
   69          | ID • '(' ')'

    '('  shift, and go to state 86

    $default  reduce using rule 62 (pr_expression)


State 99

   66 pr_expression: MUL pr_expression •

    $default  reduce using rule 66 (pr_expression)


State 100

   56 not_expression: NOT pr_expression •

    $default  reduce using rule 56 (not_expression)


State 101

   65 pr_expression: ADDRESS pr_expression •

    $default  reduce using rule 65 (pr_expression)


State 102

   61 pr_expression: '(' expression • ')'

    ')'  shift, and go to state 143


State 103

   41 decl_statement: declaration ENDST •

    $default  reduce using rule 41 (decl_statement)


State 104

   26 proc_body: '{' function_list '}' •

    $default  reduce using rule 26 (proc_body)


State 105

   28 proc_body: '{' function_list statement_list • '}'
   40 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '}'      shift, and go to state 144

    declaration       go to state 66
    statement         go to state 107
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 106

   27 proc_body: '{' statement_list '}' •

    $default  reduce using rule 27 (proc_body)


State 107

   40 statement_list: statement_list statement •

    $default  reduce using rule 40 (statement_list)


State 108

   42 assgn_statement: ids ASSGN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 145
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 109

   43 expr_statement: expression ENDST •

    $default  reduce using rule 43 (expr_statement)


State 110

   72 logic: LOGICEQ •

    $default  reduce using rule 72 (logic)


State 111

   73 logic: LOGICNOTEQ •

    $default  reduce using rule 73 (logic)


State 112

   74 logic: LOGICMORE •

    $default  reduce using rule 74 (logic)


State 113

   75 logic: LOGICLESS •

    $default  reduce using rule 75 (logic)


State 114

   76 logic: LOGICMOREEQ •

    $default  reduce using rule 76 (logic)


State 115

   77 logic: LOGICLESSEQ •

    $default  reduce using rule 77 (logic)


State 116

   78 logic: LOGICAND •

    $default  reduce using rule 78 (logic)


State 117

   79 logic: LOGICOR •

    $default  reduce using rule 79 (logic)


State 118

   58 logic_expression: logic_expression logic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 146
    func_call      go to state 81
    literal        go to state 82


State 119

   80 arithmetic: PLUS •

    $default  reduce using rule 80 (arithmetic)


State 120

   81 arithmetic: MINUS •

    $default  reduce using rule 81 (arithmetic)


State 121

   82 arithmetic: MUL •

    $default  reduce using rule 82 (arithmetic)


State 122

   83 arithmetic: DIV •

    $default  reduce using rule 83 (arithmetic)


State 123

   60 ar_expression: ar_expression arithmetic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 147
    func_call      go to state 81
    literal        go to state 82


State 124

   57 logic_expression: pr_expression logic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 148
    func_call      go to state 81
    literal        go to state 82


State 125

   59 ar_expression: pr_expression arithmetic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 149
    func_call      go to state 81
    literal        go to state 82


State 126

   49 ret_statement: RETURN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 150
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 127

   24 func_body: '{' function_list statement_list • ret_statement '}'
   40 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 126
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    declaration       go to state 66
    statement         go to state 107
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ret_statement     go to state 151
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 128

   22 func_body: '{' function_list ret_statement • '}'

    '}'  shift, and go to state 152


State 129

   23 func_body: '{' statement_list ret_statement • '}'

    '}'  shift, and go to state 153


State 130

   69 func_call: ID '(' ')' •

    $default  reduce using rule 69 (func_call)


State 131

   70 arglist: expression •

    $default  reduce using rule 70 (arglist)


State 132

   68 func_call: ID '(' arglist • ')'
   71 arglist: arglist • ',' expression

    ','  shift, and go to state 154
    ')'  shift, and go to state 155


State 133

   44 if_statement: IF '(' expression • ')' iter_body
   45             | IF '(' expression • ')' iter_body ELSE iter_body

    ')'  shift, and go to state 156


State 134

   46 iter_statement: WHILE '(' expression • ')' iter_body

    ')'  shift, and go to state 157


State 135

   48 iter_statement: FOR '(' assgn_statement • expression ENDST update ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 158
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 136

   31 iter_body: '{' '}' •

    $default  reduce using rule 31 (iter_body)


State 137

   30 iter_body: '{' statement_list • '}'
   40 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '}'      shift, and go to state 159

    declaration       go to state 66
    statement         go to state 107
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 138

   47 iter_statement: DO iter_body WHILE • '(' expression ')' ENDST

    '('  shift, and go to state 160


State 139

    9 decl_id: ID '[' • ar_expression ']'
   10        | ID '[' • INT ']'

    INT      shift, and go to state 161
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    ar_expression  go to state 162
    pr_expression  go to state 163
    func_call      go to state 81
    literal        go to state 82


State 140

    2 declaration: VAR decl_param_list TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 164


State 141

    5 decl_param_list: decl_param_list ',' • decl_assgn

    ID  shift, and go to state 93

    decl_assgn  go to state 165
    decl_id     go to state 96


State 142

    6 decl_assgn: decl_id ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 166
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 143

   61 pr_expression: '(' expression ')' •

    $default  reduce using rule 61 (pr_expression)


State 144

   28 proc_body: '{' function_list statement_list '}' •

    $default  reduce using rule 28 (proc_body)


State 145

   42 assgn_statement: ids ASSGN expression • ENDST

    ENDST  shift, and go to state 167


State 146

   58 logic_expression: logic_expression logic pr_expression •

    $default  reduce using rule 58 (logic_expression)


State 147

   60 ar_expression: ar_expression arithmetic pr_expression •

    $default  reduce using rule 60 (ar_expression)


State 148

   57 logic_expression: pr_expression logic pr_expression •

    $default  reduce using rule 57 (logic_expression)


State 149

   59 ar_expression: pr_expression arithmetic pr_expression •

    $default  reduce using rule 59 (ar_expression)


State 150

   49 ret_statement: RETURN expression • ENDST

    ENDST  shift, and go to state 168


State 151

   24 func_body: '{' function_list statement_list ret_statement • '}'

    '}'  shift, and go to state 169


State 152

   22 func_body: '{' function_list ret_statement '}' •

    $default  reduce using rule 22 (func_body)


State 153

   23 func_body: '{' statement_list ret_statement '}' •

    $default  reduce using rule 23 (func_body)


State 154

   71 arglist: arglist ',' • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 170
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 155

   68 func_call: ID '(' arglist ')' •

    $default  reduce using rule 68 (func_call)


State 156

   44 if_statement: IF '(' expression ')' • iter_body
   45             | IF '(' expression ')' • iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 90

    declaration       go to state 66
    iter_body         go to state 171
    statement         go to state 92
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 157

   46 iter_statement: WHILE '(' expression ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 90

    declaration       go to state 66
    iter_body         go to state 172
    statement         go to state 92
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 158

   48 iter_statement: FOR '(' assgn_statement expression • ENDST update ')' iter_body

    ENDST  shift, and go to state 173


State 159

   30 iter_body: '{' statement_list '}' •

    $default  reduce using rule 30 (iter_body)


State 160

   47 iter_statement: DO iter_body WHILE '(' • expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 174
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 161

   10 decl_id: ID '[' INT • ']'
   92 literal: INT •

    ']'  shift, and go to state 175

    $default  reduce using rule 92 (literal)


State 162

    9 decl_id: ID '[' ar_expression • ']'
   60 ar_expression: ar_expression • arithmetic pr_expression

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    ']'    shift, and go to state 176

    arithmetic  go to state 123


State 163

   59 ar_expression: pr_expression • arithmetic pr_expression

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122

    arithmetic  go to state 125


State 164

    2 declaration: VAR decl_param_list TYPEDEF type •

    $default  reduce using rule 2 (declaration)


State 165

    5 decl_param_list: decl_param_list ',' decl_assgn •

    $default  reduce using rule 5 (decl_param_list)


State 166

    6 decl_assgn: decl_id ASSGN expression •

    $default  reduce using rule 6 (decl_assgn)


State 167

   42 assgn_statement: ids ASSGN expression ENDST •

    $default  reduce using rule 42 (assgn_statement)


State 168

   49 ret_statement: RETURN expression ENDST •

    $default  reduce using rule 49 (ret_statement)


State 169

   24 func_body: '{' function_list statement_list ret_statement '}' •

    $default  reduce using rule 24 (func_body)


State 170

   71 arglist: arglist ',' expression •

    $default  reduce using rule 71 (arglist)


State 171

   44 if_statement: IF '(' expression ')' iter_body •
   45             | IF '(' expression ')' iter_body • ELSE iter_body

    ELSE  shift, and go to state 177

    $default  reduce using rule 44 (if_statement)


State 172

   46 iter_statement: WHILE '(' expression ')' iter_body •

    $default  reduce using rule 46 (iter_statement)


State 173

   48 iter_statement: FOR '(' assgn_statement expression ENDST • update ')' iter_body

    ID  shift, and go to state 178

    update  go to state 179


State 174

   47 iter_statement: DO iter_body WHILE '(' expression • ')' ENDST

    ')'  shift, and go to state 180


State 175

   10 decl_id: ID '[' INT ']' •

    $default  reduce using rule 10 (decl_id)


State 176

    9 decl_id: ID '[' ar_expression ']' •

    $default  reduce using rule 9 (decl_id)


State 177

   45 if_statement: IF '(' expression ')' iter_body ELSE • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 90

    declaration       go to state 66
    iter_body         go to state 181
    statement         go to state 92
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 178

   38 update: ID • ASSGN expression

    ASSGN  shift, and go to state 182


State 179

   48 iter_statement: FOR '(' assgn_statement expression ENDST update • ')' iter_body

    ')'  shift, and go to state 183


State 180

   47 iter_statement: DO iter_body WHILE '(' expression ')' • ENDST

    ENDST  shift, and go to state 184


State 181

   45 if_statement: IF '(' expression ')' iter_body ELSE iter_body •

    $default  reduce using rule 45 (if_statement)


State 182

   38 update: ID ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 98
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 185
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 183

   48 iter_statement: FOR '(' assgn_statement expression ENDST update ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 90

    declaration       go to state 66
    iter_body         go to state 186
    statement         go to state 92
    decl_statement    go to state 70
    assgn_statement   go to state 71
    expr_statement    go to state 72
    if_statement      go to state 73
    iter_statement    go to state 74
    ids               go to state 75
    expression        go to state 76
    not_expression    go to state 77
    logic_expression  go to state 78
    ar_expression     go to state 79
    pr_expression     go to state 80
    func_call         go to state 81
    literal           go to state 82


State 184

   47 iter_statement: DO iter_body WHILE '(' expression ')' ENDST •

    $default  reduce using rule 47 (iter_statement)


State 185

   38 update: ID ASSGN expression •

    $default  reduce using rule 38 (update)


State 186

   48 iter_statement: FOR '(' assgn_statement expression ENDST update ')' iter_body •

    $default  reduce using rule 48 (iter_statement)

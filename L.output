Terminals unused in grammar

    NUL
    COMMOPEN
    COMMCLOSE


State 162 conflicts: 21 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: function_list

    2 declaration: VAR decl_param_list TYPEDEF type
    3            | TYPESTR decl_param_list

    4 decl_param_list: decl_assgn
    5                | decl_param_list ',' decl_assgn

    6 decl_assgn: decl_id ASSGN expression
    7           | decl_id

    8 decl_id: ID
    9        | ID '[' ar_expression ']'
   10        | ID '[' INT ']'

   11 function_list: funcproc
   12              | function_list funcproc

   13 funcproc: function
   14         | procedure
   15         | main_function

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

   19 parameter_list: ARG ids TYPEDEF type
   20               | parameter_list ENDST ARG ids TYPEDEF type
   21               | ε

   22 func_body: '{' function_list ret_statement '}'
   23          | '{' statement_list ret_statement '}'
   24          | '{' function_list statement_list ret_statement '}'
   25          | '{' '}'

   26 proc_body: '{' function_list '}'
   27          | '{' statement_list '}'
   28          | '{' function_list statement_list '}'
   29          | '{' '}'

   30 iter_body: '{' statement_list '}'
   31          | '{' '}'
   32          | statement

   33 statement: iter_statement
   34          | if_statement
   35          | expr_statement
   36          | assgn_statement
   37          | decl_statement
   38          | '{' statement_list '}'

   39 update: ID ASSGN expression

   40 statement_list: statement
   41               | statement_list statement

   42 decl_statement: declaration ENDST

   43 assgn_statement: ids ASSGN expression ENDST

   44 expr_statement: expression ENDST

   45 if_statement: IF '(' expression ')' iter_body
   46             | IF '(' expression ')' iter_body ELSE iter_body

   47 iter_statement: WHILE '(' expression ')' iter_body
   48               | DO iter_body WHILE '(' expression ')' ENDST
   49               | FOR '(' assgn_statement expression ENDST update ')' iter_body

   50 ret_statement: RETURN expression ENDST

   51 ids: ID
   52    | ids ',' ID

   53 expression: not_expression
   54           | ar_expression
   55           | logic_expression
   56           | pr_expression

   57 not_expression: NOT pr_expression

   58 logic_expression: pr_expression logic pr_expression
   59                 | logic_expression logic pr_expression

   60 ar_expression: pr_expression arithmetic pr_expression
   61              | ar_expression arithmetic pr_expression

   62 pr_expression: '(' expression ')'
   63              | ID
   64              | literal
   65              | func_call
   66              | ADDRESS pr_expression
   67              | MUL pr_expression
   68              | STRLEN

   69 func_call: ID '(' arglist ')'
   70          | ID '(' ')'

   71 arglist: expression
   72        | arglist ',' expression

   73 logic: LOGICEQ
   74      | LOGICNOTEQ
   75      | LOGICMORE
   76      | LOGICLESS
   77      | LOGICMOREEQ
   78      | LOGICLESSEQ
   79      | LOGICAND
   80      | LOGICOR

   81 arithmetic: PLUS
   82           | MINUS
   83           | MUL
   84           | DIV

   85 type: TYPEBOOL
   86     | TYPECHAR
   87     | TYPEINT
   88     | TYPEREAL
   89     | TYPECHARPOINTER
   90     | TYPEINTPOINTER
   91     | TYPEREALPOINTER
   92     | TYPESTR

   93 literal: INT
   94        | REAL
   95        | CHAR
   96        | BOOL
   97        | STR


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 17 18 45 46 47 48 49 62 69 70
    ')' (41) 16 17 18 45 46 47 48 49 62 69 70
    ',' (44) 5 52 72
    '[' (91) 9 10
    ']' (93) 9 10
    '{' (123) 22 23 24 25 26 27 28 29 30 31 38
    '}' (125) 22 23 24 25 26 27 28 29 30 31 38
    error (256)
    INT <node_info> (258) 10 93
    ID <node_info> (259) 8 9 10 16 17 39 51 52 63 69 70
    REAL <node_info> (260) 94
    BOOL <node_info> (261) 96
    STR <node_info> (262) 97
    CHAR <node_info> (263) 95
    IF <node_info> (264) 45 46
    ELSE <node_info> (265) 46
    WHILE <node_info> (266) 47 48
    FOR <node_info> (267) 49
    DO <node_info> (268) 48
    VAR <node_info> (269) 2
    FUNCTION <node_info> (270) 16 17 18
    RETURN <node_info> (271) 50
    NUL <node_info> (272)
    VOID <node_info> (273) 17 18
    TYPEBOOL <node_info> (274) 85
    TYPECHAR <node_info> (275) 86
    TYPEINT <node_info> (276) 87
    TYPEREAL <node_info> (277) 88
    TYPECHARPOINTER <node_info> (278) 89
    TYPEINTPOINTER <node_info> (279) 90
    TYPEREALPOINTER <node_info> (280) 91
    TYPESTR <node_info> (281) 3 92
    LOGICEQ <node_info> (282) 73
    LOGICNOTEQ <node_info> (283) 74
    LOGICMORE <node_info> (284) 75
    LOGICLESS <node_info> (285) 76
    LOGICMOREEQ <node_info> (286) 77
    LOGICLESSEQ <node_info> (287) 78
    LOGICAND <node_info> (288) 79
    LOGICOR <node_info> (289) 80
    PLUS <node_info> (290) 81
    MINUS <node_info> (291) 82
    MUL <node_info> (292) 67 83
    DIV <node_info> (293) 84
    ARG <node_info> (294) 19 20
    ASSGN <node_info> (295) 6 39 43
    ENDST <node_info> (296) 20 42 43 44 48 49 50
    TYPEDEF <node_info> (297) 2 16 17 18 19 20
    NOT <node_info> (298) 57
    ADDRESS <node_info> (299) 66
    COMMOPEN <node_info> (300)
    COMMCLOSE <node_info> (301)
    MAIN <node_info> (302) 18
    STRLEN <node_info> (303) 68
    "lowest" (304)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program <node_info> (58)
        on left: 1
        on right: 0
    declaration <node_info> (59)
        on left: 2 3
        on right: 42
    decl_param_list <node_info> (60)
        on left: 4 5
        on right: 2 3 5
    decl_assgn <node_info> (61)
        on left: 6 7
        on right: 4 5
    decl_id <node_info> (62)
        on left: 8 9 10
        on right: 6 7
    function_list <node_info> (63)
        on left: 11 12
        on right: 1 12 22 24 26 28
    funcproc <node_info> (64)
        on left: 13 14 15
        on right: 11 12
    function <node_info> (65)
        on left: 16
        on right: 13
    procedure <node_info> (66)
        on left: 17
        on right: 14
    main_function <node_info> (67)
        on left: 18
        on right: 15
    parameter_list <node_info> (68)
        on left: 19 20 21
        on right: 16 17 18 20
    func_body <node_info> (69)
        on left: 22 23 24 25
        on right: 16
    proc_body <node_info> (70)
        on left: 26 27 28 29
        on right: 17 18
    iter_body <node_info> (71)
        on left: 30 31 32
        on right: 45 46 47 48 49
    statement <node_info> (72)
        on left: 33 34 35 36 37 38
        on right: 32 40 41
    update <node_info> (73)
        on left: 39
        on right: 49
    statement_list <node_info> (74)
        on left: 40 41
        on right: 23 24 27 28 30 38 41
    decl_statement <node_info> (75)
        on left: 42
        on right: 37
    assgn_statement <node_info> (76)
        on left: 43
        on right: 36 49
    expr_statement <node_info> (77)
        on left: 44
        on right: 35
    if_statement <node_info> (78)
        on left: 45 46
        on right: 34
    iter_statement <node_info> (79)
        on left: 47 48 49
        on right: 33
    ret_statement <node_info> (80)
        on left: 50
        on right: 22 23 24
    ids <node_info> (81)
        on left: 51 52
        on right: 19 20 43 52
    expression <node_info> (82)
        on left: 53 54 55 56
        on right: 6 39 43 44 45 46 47 48 49 50 62 71 72
    not_expression <node_info> (83)
        on left: 57
        on right: 53
    logic_expression <node_info> (84)
        on left: 58 59
        on right: 55 59
    ar_expression <node_info> (85)
        on left: 60 61
        on right: 9 54 61
    pr_expression <node_info> (86)
        on left: 62 63 64 65 66 67 68
        on right: 56 57 58 59 60 61 66 67
    func_call <node_info> (87)
        on left: 69 70
        on right: 65
    arglist <node_info> (88)
        on left: 71 72
        on right: 69 72
    logic <node_info> (89)
        on left: 73 74 75 76 77 78 79 80
        on right: 58 59
    arithmetic <node_info> (90)
        on left: 81 82 83 84
        on right: 60 61
    type <node_info> (91)
        on left: 85 86 87 88 89 90 91 92
        on right: 2 16 19 20
    literal <node_info> (92)
        on left: 93 94 95 96 97
        on right: 64


State 0

    0 $accept: • program $end

    FUNCTION  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    funcproc       go to state 4
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 1

   16 function: FUNCTION • ID '(' parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION • ID '(' parameter_list ')' TYPEDEF VOID proc_body
   18 main_function: FUNCTION • MAIN '(' parameter_list ')' TYPEDEF VOID proc_body

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 2

    0 $accept: program • $end

    $end  shift, and go to state 10


State 3

    1 program: function_list •
   12 function_list: function_list • funcproc

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    funcproc       go to state 11
    function       go to state 5
    procedure      go to state 6
    main_function  go to state 7


State 4

   11 function_list: funcproc •

    $default  reduce using rule 11 (function_list)


State 5

   13 funcproc: function •

    $default  reduce using rule 13 (funcproc)


State 6

   14 funcproc: procedure •

    $default  reduce using rule 14 (funcproc)


State 7

   15 funcproc: main_function •

    $default  reduce using rule 15 (funcproc)


State 8

   16 function: FUNCTION ID • '(' parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 12


State 9

   18 main_function: FUNCTION MAIN • '(' parameter_list ')' TYPEDEF VOID proc_body

    '('  shift, and go to state 13


State 10

    0 $accept: program $end •

    $default  accept


State 11

   12 function_list: function_list funcproc •

    $default  reduce using rule 12 (function_list)


State 12

   16 function: FUNCTION ID '(' • parameter_list ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 21 (parameter_list)

    parameter_list  go to state 15


State 13

   18 main_function: FUNCTION MAIN '(' • parameter_list ')' TYPEDEF VOID proc_body

    ARG  shift, and go to state 14

    $default  reduce using rule 21 (parameter_list)

    parameter_list  go to state 16


State 14

   19 parameter_list: ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 18


State 15

   16 function: FUNCTION ID '(' parameter_list • ')' TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' parameter_list • ')' TYPEDEF VOID proc_body
   20 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 20


State 16

   18 main_function: FUNCTION MAIN '(' parameter_list • ')' TYPEDEF VOID proc_body
   20 parameter_list: parameter_list • ENDST ARG ids TYPEDEF type

    ENDST  shift, and go to state 19
    ')'    shift, and go to state 21


State 17

   51 ids: ID •

    $default  reduce using rule 51 (ids)


State 18

   19 parameter_list: ARG ids • TYPEDEF type
   52 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 22
    ','      shift, and go to state 23


State 19

   20 parameter_list: parameter_list ENDST • ARG ids TYPEDEF type

    ARG  shift, and go to state 24


State 20

   16 function: FUNCTION ID '(' parameter_list ')' • TYPEDEF type func_body
   17 procedure: FUNCTION ID '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 25


State 21

   18 main_function: FUNCTION MAIN '(' parameter_list ')' • TYPEDEF VOID proc_body

    TYPEDEF  shift, and go to state 26


State 22

   19 parameter_list: ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 35


State 23

   52 ids: ids ',' • ID

    ID  shift, and go to state 36


State 24

   20 parameter_list: parameter_list ENDST ARG • ids TYPEDEF type

    ID  shift, and go to state 17

    ids  go to state 37


State 25

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF • type func_body
   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID             shift, and go to state 38
    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 39


State 26

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF • VOID proc_body

    VOID  shift, and go to state 40


State 27

   85 type: TYPEBOOL •

    $default  reduce using rule 85 (type)


State 28

   86 type: TYPECHAR •

    $default  reduce using rule 86 (type)


State 29

   87 type: TYPEINT •

    $default  reduce using rule 87 (type)


State 30

   88 type: TYPEREAL •

    $default  reduce using rule 88 (type)


State 31

   89 type: TYPECHARPOINTER •

    $default  reduce using rule 89 (type)


State 32

   90 type: TYPEINTPOINTER •

    $default  reduce using rule 90 (type)


State 33

   91 type: TYPEREALPOINTER •

    $default  reduce using rule 91 (type)


State 34

   92 type: TYPESTR •

    $default  reduce using rule 92 (type)


State 35

   19 parameter_list: ARG ids TYPEDEF type •

    $default  reduce using rule 19 (parameter_list)


State 36

   52 ids: ids ',' ID •

    $default  reduce using rule 52 (ids)


State 37

   20 parameter_list: parameter_list ENDST ARG ids • TYPEDEF type
   52 ids: ids • ',' ID

    TYPEDEF  shift, and go to state 41
    ','      shift, and go to state 23


State 38

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 43


State 39

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type • func_body

    '{'  shift, and go to state 44

    func_body  go to state 45


State 40

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID • proc_body

    '{'  shift, and go to state 42

    proc_body  go to state 46


State 41

   20 parameter_list: parameter_list ENDST ARG ids TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 47


State 42

   26 proc_body: '{' • function_list '}'
   27          | '{' • statement_list '}'
   28          | '{' • function_list statement_list '}'
   29          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '{'       shift, and go to state 65
    '}'       shift, and go to state 66

    declaration       go to state 67
    function_list     go to state 68
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    statement_list    go to state 70
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 43

   17 procedure: FUNCTION ID '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 17 (procedure)


State 44

   22 func_body: '{' • function_list ret_statement '}'
   23          | '{' • statement_list ret_statement '}'
   24          | '{' • function_list statement_list ret_statement '}'
   25          | '{' • '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '{'       shift, and go to state 65
    '}'       shift, and go to state 84

    declaration       go to state 67
    function_list     go to state 85
    funcproc          go to state 4
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    statement_list    go to state 86
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 45

   16 function: FUNCTION ID '(' parameter_list ')' TYPEDEF type func_body •

    $default  reduce using rule 16 (function)


State 46

   18 main_function: FUNCTION MAIN '(' parameter_list ')' TYPEDEF VOID proc_body •

    $default  reduce using rule 18 (main_function)


State 47

   20 parameter_list: parameter_list ENDST ARG ids TYPEDEF type •

    $default  reduce using rule 20 (parameter_list)


State 48

   93 literal: INT •

    $default  reduce using rule 93 (literal)


State 49

   51 ids: ID •
   63 pr_expression: ID •
   69 func_call: ID • '(' arglist ')'
   70          | ID • '(' ')'

    '('  shift, and go to state 87

    ASSGN     reduce using rule 51 (ids)
    ','       reduce using rule 51 (ids)
    $default  reduce using rule 63 (pr_expression)


State 50

   94 literal: REAL •

    $default  reduce using rule 94 (literal)


State 51

   96 literal: BOOL •

    $default  reduce using rule 96 (literal)


State 52

   97 literal: STR •

    $default  reduce using rule 97 (literal)


State 53

   95 literal: CHAR •

    $default  reduce using rule 95 (literal)


State 54

   45 if_statement: IF • '(' expression ')' iter_body
   46             | IF • '(' expression ')' iter_body ELSE iter_body

    '('  shift, and go to state 88


State 55

   47 iter_statement: WHILE • '(' expression ')' iter_body

    '('  shift, and go to state 89


State 56

   49 iter_statement: FOR • '(' assgn_statement expression ENDST update ')' iter_body

    '('  shift, and go to state 90


State 57

   48 iter_statement: DO • iter_body WHILE '(' expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 91

    declaration       go to state 67
    iter_body         go to state 92
    statement         go to state 93
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 58

    2 declaration: VAR • decl_param_list TYPEDEF type

    ID  shift, and go to state 94

    decl_param_list  go to state 95
    decl_assgn       go to state 96
    decl_id          go to state 97


State 59

    3 declaration: TYPESTR • decl_param_list

    ID  shift, and go to state 94

    decl_param_list  go to state 98
    decl_assgn       go to state 96
    decl_id          go to state 97


State 60

   67 pr_expression: MUL • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 100
    func_call      go to state 82
    literal        go to state 83


State 61

   57 not_expression: NOT • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 101
    func_call      go to state 82
    literal        go to state 83


State 62

   66 pr_expression: ADDRESS • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 102
    func_call      go to state 82
    literal        go to state 83


State 63

   68 pr_expression: STRLEN •

    $default  reduce using rule 68 (pr_expression)


State 64

   62 pr_expression: '(' • expression ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 103
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 65

   38 statement: '{' • statement_list '}'

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65

    declaration       go to state 67
    statement         go to state 69
    statement_list    go to state 104
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 66

   29 proc_body: '{' '}' •

    $default  reduce using rule 29 (proc_body)


State 67

   42 decl_statement: declaration • ENDST

    ENDST  shift, and go to state 105


State 68

   12 function_list: function_list • funcproc
   26 proc_body: '{' function_list • '}'
   28          | '{' function_list • statement_list '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '{'       shift, and go to state 65
    '}'       shift, and go to state 106

    declaration       go to state 67
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    statement_list    go to state 107
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 69

   40 statement_list: statement •

    $default  reduce using rule 40 (statement_list)


State 70

   27 proc_body: '{' statement_list • '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65
    '}'      shift, and go to state 108

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 71

   37 statement: decl_statement •

    $default  reduce using rule 37 (statement)


State 72

   36 statement: assgn_statement •

    $default  reduce using rule 36 (statement)


State 73

   35 statement: expr_statement •

    $default  reduce using rule 35 (statement)


State 74

   34 statement: if_statement •

    $default  reduce using rule 34 (statement)


State 75

   33 statement: iter_statement •

    $default  reduce using rule 33 (statement)


State 76

   43 assgn_statement: ids • ASSGN expression ENDST
   52 ids: ids • ',' ID

    ASSGN  shift, and go to state 110
    ','    shift, and go to state 23


State 77

   44 expr_statement: expression • ENDST

    ENDST  shift, and go to state 111


State 78

   53 expression: not_expression •

    $default  reduce using rule 53 (expression)


State 79

   55 expression: logic_expression •
   59 logic_expression: logic_expression • logic pr_expression

    LOGICEQ      shift, and go to state 112
    LOGICNOTEQ   shift, and go to state 113
    LOGICMORE    shift, and go to state 114
    LOGICLESS    shift, and go to state 115
    LOGICMOREEQ  shift, and go to state 116
    LOGICLESSEQ  shift, and go to state 117
    LOGICAND     shift, and go to state 118
    LOGICOR      shift, and go to state 119

    $default  reduce using rule 55 (expression)

    logic  go to state 120


State 80

   54 expression: ar_expression •
   61 ar_expression: ar_expression • arithmetic pr_expression

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122
    MUL    shift, and go to state 123
    DIV    shift, and go to state 124

    $default  reduce using rule 54 (expression)

    arithmetic  go to state 125


State 81

   56 expression: pr_expression •
   58 logic_expression: pr_expression • logic pr_expression
   60 ar_expression: pr_expression • arithmetic pr_expression

    LOGICEQ      shift, and go to state 112
    LOGICNOTEQ   shift, and go to state 113
    LOGICMORE    shift, and go to state 114
    LOGICLESS    shift, and go to state 115
    LOGICMOREEQ  shift, and go to state 116
    LOGICLESSEQ  shift, and go to state 117
    LOGICAND     shift, and go to state 118
    LOGICOR      shift, and go to state 119
    PLUS         shift, and go to state 121
    MINUS        shift, and go to state 122
    MUL          shift, and go to state 123
    DIV          shift, and go to state 124

    $default  reduce using rule 56 (expression)

    logic       go to state 126
    arithmetic  go to state 127


State 82

   65 pr_expression: func_call •

    $default  reduce using rule 65 (pr_expression)


State 83

   64 pr_expression: literal •

    $default  reduce using rule 64 (pr_expression)


State 84

   25 func_body: '{' '}' •

    $default  reduce using rule 25 (func_body)


State 85

   12 function_list: function_list • funcproc
   22 func_body: '{' function_list • ret_statement '}'
   24          | '{' function_list • statement_list ret_statement '}'

    INT       shift, and go to state 48
    ID        shift, and go to state 49
    REAL      shift, and go to state 50
    BOOL      shift, and go to state 51
    STR       shift, and go to state 52
    CHAR      shift, and go to state 53
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    FOR       shift, and go to state 56
    DO        shift, and go to state 57
    VAR       shift, and go to state 58
    FUNCTION  shift, and go to state 1
    RETURN    shift, and go to state 128
    TYPESTR   shift, and go to state 59
    MUL       shift, and go to state 60
    NOT       shift, and go to state 61
    ADDRESS   shift, and go to state 62
    STRLEN    shift, and go to state 63
    '('       shift, and go to state 64
    '{'       shift, and go to state 65

    declaration       go to state 67
    funcproc          go to state 11
    function          go to state 5
    procedure         go to state 6
    main_function     go to state 7
    statement         go to state 69
    statement_list    go to state 129
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ret_statement     go to state 130
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 86

   23 func_body: '{' statement_list • ret_statement '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 128
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ret_statement     go to state 131
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 87

   69 func_call: ID '(' • arglist ')'
   70          | ID '(' • ')'

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    ')'      shift, and go to state 132

    expression        go to state 133
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    arglist           go to state 134
    literal           go to state 83


State 88

   45 if_statement: IF '(' • expression ')' iter_body
   46             | IF '(' • expression ')' iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 135
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 89

   47 iter_statement: WHILE '(' • expression ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 136
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 90

   49 iter_statement: FOR '(' • assgn_statement expression ENDST update ')' iter_body

    ID  shift, and go to state 17

    assgn_statement  go to state 137
    ids              go to state 76


State 91

   30 iter_body: '{' • statement_list '}'
   31          | '{' • '}'
   38 statement: '{' • statement_list '}'

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65
    '}'      shift, and go to state 138

    declaration       go to state 67
    statement         go to state 69
    statement_list    go to state 139
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 92

   48 iter_statement: DO iter_body • WHILE '(' expression ')' ENDST

    WHILE  shift, and go to state 140


State 93

   32 iter_body: statement •

    $default  reduce using rule 32 (iter_body)


State 94

    8 decl_id: ID •
    9        | ID • '[' ar_expression ']'
   10        | ID • '[' INT ']'

    '['  shift, and go to state 141

    $default  reduce using rule 8 (decl_id)


State 95

    2 declaration: VAR decl_param_list • TYPEDEF type
    5 decl_param_list: decl_param_list • ',' decl_assgn

    TYPEDEF  shift, and go to state 142
    ','      shift, and go to state 143


State 96

    4 decl_param_list: decl_assgn •

    $default  reduce using rule 4 (decl_param_list)


State 97

    6 decl_assgn: decl_id • ASSGN expression
    7           | decl_id •

    ASSGN  shift, and go to state 144

    $default  reduce using rule 7 (decl_assgn)


State 98

    3 declaration: TYPESTR decl_param_list •
    5 decl_param_list: decl_param_list • ',' decl_assgn

    ','  shift, and go to state 143

    $default  reduce using rule 3 (declaration)


State 99

   63 pr_expression: ID •
   69 func_call: ID • '(' arglist ')'
   70          | ID • '(' ')'

    '('  shift, and go to state 87

    $default  reduce using rule 63 (pr_expression)


State 100

   67 pr_expression: MUL pr_expression •

    $default  reduce using rule 67 (pr_expression)


State 101

   57 not_expression: NOT pr_expression •

    $default  reduce using rule 57 (not_expression)


State 102

   66 pr_expression: ADDRESS pr_expression •

    $default  reduce using rule 66 (pr_expression)


State 103

   62 pr_expression: '(' expression • ')'

    ')'  shift, and go to state 145


State 104

   38 statement: '{' statement_list • '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65
    '}'      shift, and go to state 146

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 105

   42 decl_statement: declaration ENDST •

    $default  reduce using rule 42 (decl_statement)


State 106

   26 proc_body: '{' function_list '}' •

    $default  reduce using rule 26 (proc_body)


State 107

   28 proc_body: '{' function_list statement_list • '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65
    '}'      shift, and go to state 147

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 108

   27 proc_body: '{' statement_list '}' •

    $default  reduce using rule 27 (proc_body)


State 109

   41 statement_list: statement_list statement •

    $default  reduce using rule 41 (statement_list)


State 110

   43 assgn_statement: ids ASSGN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 148
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 111

   44 expr_statement: expression ENDST •

    $default  reduce using rule 44 (expr_statement)


State 112

   73 logic: LOGICEQ •

    $default  reduce using rule 73 (logic)


State 113

   74 logic: LOGICNOTEQ •

    $default  reduce using rule 74 (logic)


State 114

   75 logic: LOGICMORE •

    $default  reduce using rule 75 (logic)


State 115

   76 logic: LOGICLESS •

    $default  reduce using rule 76 (logic)


State 116

   77 logic: LOGICMOREEQ •

    $default  reduce using rule 77 (logic)


State 117

   78 logic: LOGICLESSEQ •

    $default  reduce using rule 78 (logic)


State 118

   79 logic: LOGICAND •

    $default  reduce using rule 79 (logic)


State 119

   80 logic: LOGICOR •

    $default  reduce using rule 80 (logic)


State 120

   59 logic_expression: logic_expression logic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 149
    func_call      go to state 82
    literal        go to state 83


State 121

   81 arithmetic: PLUS •

    $default  reduce using rule 81 (arithmetic)


State 122

   82 arithmetic: MINUS •

    $default  reduce using rule 82 (arithmetic)


State 123

   83 arithmetic: MUL •

    $default  reduce using rule 83 (arithmetic)


State 124

   84 arithmetic: DIV •

    $default  reduce using rule 84 (arithmetic)


State 125

   61 ar_expression: ar_expression arithmetic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 150
    func_call      go to state 82
    literal        go to state 83


State 126

   58 logic_expression: pr_expression logic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 151
    func_call      go to state 82
    literal        go to state 83


State 127

   60 ar_expression: pr_expression arithmetic • pr_expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    pr_expression  go to state 152
    func_call      go to state 82
    literal        go to state 83


State 128

   50 ret_statement: RETURN • expression ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 153
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 129

   24 func_body: '{' function_list statement_list • ret_statement '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    RETURN   shift, and go to state 128
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ret_statement     go to state 154
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 130

   22 func_body: '{' function_list ret_statement • '}'

    '}'  shift, and go to state 155


State 131

   23 func_body: '{' statement_list ret_statement • '}'

    '}'  shift, and go to state 156


State 132

   70 func_call: ID '(' ')' •

    $default  reduce using rule 70 (func_call)


State 133

   71 arglist: expression •

    $default  reduce using rule 71 (arglist)


State 134

   69 func_call: ID '(' arglist • ')'
   72 arglist: arglist • ',' expression

    ','  shift, and go to state 157
    ')'  shift, and go to state 158


State 135

   45 if_statement: IF '(' expression • ')' iter_body
   46             | IF '(' expression • ')' iter_body ELSE iter_body

    ')'  shift, and go to state 159


State 136

   47 iter_statement: WHILE '(' expression • ')' iter_body

    ')'  shift, and go to state 160


State 137

   49 iter_statement: FOR '(' assgn_statement • expression ENDST update ')' iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 161
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 138

   31 iter_body: '{' '}' •

    $default  reduce using rule 31 (iter_body)


State 139

   30 iter_body: '{' statement_list • '}'
   38 statement: '{' statement_list • '}'
   41 statement_list: statement_list • statement

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 65
    '}'      shift, and go to state 162

    declaration       go to state 67
    statement         go to state 109
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 140

   48 iter_statement: DO iter_body WHILE • '(' expression ')' ENDST

    '('  shift, and go to state 163


State 141

    9 decl_id: ID '[' • ar_expression ']'
   10        | ID '[' • INT ']'

    INT      shift, and go to state 164
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    ar_expression  go to state 165
    pr_expression  go to state 166
    func_call      go to state 82
    literal        go to state 83


State 142

    2 declaration: VAR decl_param_list TYPEDEF • type

    TYPEBOOL         shift, and go to state 27
    TYPECHAR         shift, and go to state 28
    TYPEINT          shift, and go to state 29
    TYPEREAL         shift, and go to state 30
    TYPECHARPOINTER  shift, and go to state 31
    TYPEINTPOINTER   shift, and go to state 32
    TYPEREALPOINTER  shift, and go to state 33
    TYPESTR          shift, and go to state 34

    type  go to state 167


State 143

    5 decl_param_list: decl_param_list ',' • decl_assgn

    ID  shift, and go to state 94

    decl_assgn  go to state 168
    decl_id     go to state 97


State 144

    6 decl_assgn: decl_id ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 169
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 145

   62 pr_expression: '(' expression ')' •

    $default  reduce using rule 62 (pr_expression)


State 146

   38 statement: '{' statement_list '}' •

    $default  reduce using rule 38 (statement)


State 147

   28 proc_body: '{' function_list statement_list '}' •

    $default  reduce using rule 28 (proc_body)


State 148

   43 assgn_statement: ids ASSGN expression • ENDST

    ENDST  shift, and go to state 170


State 149

   59 logic_expression: logic_expression logic pr_expression •

    $default  reduce using rule 59 (logic_expression)


State 150

   61 ar_expression: ar_expression arithmetic pr_expression •

    $default  reduce using rule 61 (ar_expression)


State 151

   58 logic_expression: pr_expression logic pr_expression •

    $default  reduce using rule 58 (logic_expression)


State 152

   60 ar_expression: pr_expression arithmetic pr_expression •

    $default  reduce using rule 60 (ar_expression)


State 153

   50 ret_statement: RETURN expression • ENDST

    ENDST  shift, and go to state 171


State 154

   24 func_body: '{' function_list statement_list ret_statement • '}'

    '}'  shift, and go to state 172


State 155

   22 func_body: '{' function_list ret_statement '}' •

    $default  reduce using rule 22 (func_body)


State 156

   23 func_body: '{' statement_list ret_statement '}' •

    $default  reduce using rule 23 (func_body)


State 157

   72 arglist: arglist ',' • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 173
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 158

   69 func_call: ID '(' arglist ')' •

    $default  reduce using rule 69 (func_call)


State 159

   45 if_statement: IF '(' expression ')' • iter_body
   46             | IF '(' expression ')' • iter_body ELSE iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 91

    declaration       go to state 67
    iter_body         go to state 174
    statement         go to state 93
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 160

   47 iter_statement: WHILE '(' expression ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 91

    declaration       go to state 67
    iter_body         go to state 175
    statement         go to state 93
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 161

   49 iter_statement: FOR '(' assgn_statement expression • ENDST update ')' iter_body

    ENDST  shift, and go to state 176


State 162

   30 iter_body: '{' statement_list '}' •
   38 statement: '{' statement_list '}' •

    INT       reduce using rule 30 (iter_body)
    INT       [reduce using rule 38 (statement)]
    ID        reduce using rule 30 (iter_body)
    ID        [reduce using rule 38 (statement)]
    REAL      reduce using rule 30 (iter_body)
    REAL      [reduce using rule 38 (statement)]
    BOOL      reduce using rule 30 (iter_body)
    BOOL      [reduce using rule 38 (statement)]
    STR       reduce using rule 30 (iter_body)
    STR       [reduce using rule 38 (statement)]
    CHAR      reduce using rule 30 (iter_body)
    CHAR      [reduce using rule 38 (statement)]
    IF        reduce using rule 30 (iter_body)
    IF        [reduce using rule 38 (statement)]
    ELSE      reduce using rule 30 (iter_body)
    ELSE      [reduce using rule 38 (statement)]
    WHILE     reduce using rule 30 (iter_body)
    WHILE     [reduce using rule 38 (statement)]
    FOR       reduce using rule 30 (iter_body)
    FOR       [reduce using rule 38 (statement)]
    DO        reduce using rule 30 (iter_body)
    DO        [reduce using rule 38 (statement)]
    VAR       reduce using rule 30 (iter_body)
    VAR       [reduce using rule 38 (statement)]
    RETURN    reduce using rule 30 (iter_body)
    RETURN    [reduce using rule 38 (statement)]
    TYPESTR   reduce using rule 30 (iter_body)
    TYPESTR   [reduce using rule 38 (statement)]
    MUL       reduce using rule 30 (iter_body)
    MUL       [reduce using rule 38 (statement)]
    NOT       reduce using rule 30 (iter_body)
    NOT       [reduce using rule 38 (statement)]
    ADDRESS   reduce using rule 30 (iter_body)
    ADDRESS   [reduce using rule 38 (statement)]
    STRLEN    reduce using rule 30 (iter_body)
    STRLEN    [reduce using rule 38 (statement)]
    '('       reduce using rule 30 (iter_body)
    '('       [reduce using rule 38 (statement)]
    '{'       reduce using rule 30 (iter_body)
    '{'       [reduce using rule 38 (statement)]
    '}'       reduce using rule 30 (iter_body)
    '}'       [reduce using rule 38 (statement)]
    $default  reduce using rule 30 (iter_body)

    reduce/reduce conflict on tokens INT, ID, REAL, BOOL, STR, CHAR, IF, ELSE, WHILE, FOR, DO, VAR, RETURN, TYPESTR, MUL, NOT, ADDRESS, STRLEN, '(', '{', '}':
       30 iter_body: '{' statement_list '}' •
       38 statement: '{' statement_list '}' •
      Example: '{' statement_list '}' •
      First reduce derivation
        iter_body
        ↳ 30: '{' statement_list '}' •
      Second reduce derivation
        iter_body
        ↳ 32: statement
              ↳ 38: '{' statement_list '}' •



State 163

   48 iter_statement: DO iter_body WHILE '(' • expression ')' ENDST

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 177
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 164

   10 decl_id: ID '[' INT • ']'
   93 literal: INT •

    ']'  shift, and go to state 178

    $default  reduce using rule 93 (literal)


State 165

    9 decl_id: ID '[' ar_expression • ']'
   61 ar_expression: ar_expression • arithmetic pr_expression

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122
    MUL    shift, and go to state 123
    DIV    shift, and go to state 124
    ']'    shift, and go to state 179

    arithmetic  go to state 125


State 166

   60 ar_expression: pr_expression • arithmetic pr_expression

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122
    MUL    shift, and go to state 123
    DIV    shift, and go to state 124

    arithmetic  go to state 127


State 167

    2 declaration: VAR decl_param_list TYPEDEF type •

    $default  reduce using rule 2 (declaration)


State 168

    5 decl_param_list: decl_param_list ',' decl_assgn •

    $default  reduce using rule 5 (decl_param_list)


State 169

    6 decl_assgn: decl_id ASSGN expression •

    $default  reduce using rule 6 (decl_assgn)


State 170

   43 assgn_statement: ids ASSGN expression ENDST •

    $default  reduce using rule 43 (assgn_statement)


State 171

   50 ret_statement: RETURN expression ENDST •

    $default  reduce using rule 50 (ret_statement)


State 172

   24 func_body: '{' function_list statement_list ret_statement '}' •

    $default  reduce using rule 24 (func_body)


State 173

   72 arglist: arglist ',' expression •

    $default  reduce using rule 72 (arglist)


State 174

   45 if_statement: IF '(' expression ')' iter_body •
   46             | IF '(' expression ')' iter_body • ELSE iter_body

    ELSE  shift, and go to state 180

    $default  reduce using rule 45 (if_statement)


State 175

   47 iter_statement: WHILE '(' expression ')' iter_body •

    $default  reduce using rule 47 (iter_statement)


State 176

   49 iter_statement: FOR '(' assgn_statement expression ENDST • update ')' iter_body

    ID  shift, and go to state 181

    update  go to state 182


State 177

   48 iter_statement: DO iter_body WHILE '(' expression • ')' ENDST

    ')'  shift, and go to state 183


State 178

   10 decl_id: ID '[' INT ']' •

    $default  reduce using rule 10 (decl_id)


State 179

    9 decl_id: ID '[' ar_expression ']' •

    $default  reduce using rule 9 (decl_id)


State 180

   46 if_statement: IF '(' expression ')' iter_body ELSE • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 91

    declaration       go to state 67
    iter_body         go to state 184
    statement         go to state 93
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 181

   39 update: ID • ASSGN expression

    ASSGN  shift, and go to state 185


State 182

   49 iter_statement: FOR '(' assgn_statement expression ENDST update • ')' iter_body

    ')'  shift, and go to state 186


State 183

   48 iter_statement: DO iter_body WHILE '(' expression ')' • ENDST

    ENDST  shift, and go to state 187


State 184

   46 if_statement: IF '(' expression ')' iter_body ELSE iter_body •

    $default  reduce using rule 46 (if_statement)


State 185

   39 update: ID ASSGN • expression

    INT      shift, and go to state 48
    ID       shift, and go to state 99
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64

    expression        go to state 188
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 186

   49 iter_statement: FOR '(' assgn_statement expression ENDST update ')' • iter_body

    INT      shift, and go to state 48
    ID       shift, and go to state 49
    REAL     shift, and go to state 50
    BOOL     shift, and go to state 51
    STR      shift, and go to state 52
    CHAR     shift, and go to state 53
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    FOR      shift, and go to state 56
    DO       shift, and go to state 57
    VAR      shift, and go to state 58
    TYPESTR  shift, and go to state 59
    MUL      shift, and go to state 60
    NOT      shift, and go to state 61
    ADDRESS  shift, and go to state 62
    STRLEN   shift, and go to state 63
    '('      shift, and go to state 64
    '{'      shift, and go to state 91

    declaration       go to state 67
    iter_body         go to state 189
    statement         go to state 93
    decl_statement    go to state 71
    assgn_statement   go to state 72
    expr_statement    go to state 73
    if_statement      go to state 74
    iter_statement    go to state 75
    ids               go to state 76
    expression        go to state 77
    not_expression    go to state 78
    logic_expression  go to state 79
    ar_expression     go to state 80
    pr_expression     go to state 81
    func_call         go to state 82
    literal           go to state 83


State 187

   48 iter_statement: DO iter_body WHILE '(' expression ')' ENDST •

    $default  reduce using rule 48 (iter_statement)


State 188

   39 update: ID ASSGN expression •

    $default  reduce using rule 39 (update)


State 189

   49 iter_statement: FOR '(' assgn_statement expression ENDST update ')' iter_body •

    $default  reduce using rule 49 (iter_statement)
